
; PICBASIC PRO(TM) Compiler 2.60C, (c) 1998, 2011 microEngineering Labs, Inc. All Rights Reserved. 
PM_USED			EQU	1

	INCLUDE	"16F690.INC"


; Define statements.
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00017	DEFINE  CODE_SIZE 4
#define		CODE_SIZE		 4
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00018	DEFINE	CCP1_REG PORTC
#define		CCP1_REG		 PORTC
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00019	DEFINE	CCP1_BIT 5
#define		CCP1_BIT		 5
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00016	 DEFINE OSC 8
#define		OSC		 8
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00017	 DEFINE HSER_RCSTA 90h
#define		HSER_RCSTA		 90h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00018	 DEFINE HSER_TXSTA 24h
#define		HSER_TXSTA		 24h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00019	 DEFINE HSER_SPBRG 51
#define		HSER_SPBRG		 51
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00020	 DEFINE HSER_CLROERR 1
#define		HSER_CLROERR		 1

RAM_START       		EQU	00020h
RAM_END         		EQU	0016Fh
RAM_BANKS       		EQU	00003h
BANK0_START     		EQU	00020h
BANK0_END       		EQU	0007Fh
BANK1_START     		EQU	000A0h
BANK1_END       		EQU	000EFh
BANK2_START     		EQU	00120h
BANK2_END       		EQU	0016Fh
EEPROM_START    		EQU	02100h
EEPROM_END      		EQU	021FFh

; D:\DOCUME~1\PICDEV~1\PBP\PBP260\PBPPIC14.RAM	00012	A00020	R0      VAR     WORD BANK0 SYSTEM       ' System Register
R0              		EQU	RAM_START + 000h
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\PBPPIC14.RAM	00013	A00022	R1      VAR     WORD BANK0 SYSTEM       ' System Register
R1              		EQU	RAM_START + 002h
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\PBPPIC14.RAM	00014	A00024	R2      VAR     WORD BANK0 SYSTEM       ' System Register
R2              		EQU	RAM_START + 004h
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\PBPPIC14.RAM	00015	A00026	R3      VAR     WORD BANK0 SYSTEM       ' System Register
R3              		EQU	RAM_START + 006h
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\PBPPIC14.RAM	00016	A00028	R4      VAR     WORD BANK0 SYSTEM       ' System Register
R4              		EQU	RAM_START + 008h
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\PBPPIC14.RAM	00017	A0002A	R5      VAR     WORD BANK0 SYSTEM       ' System Register
R5              		EQU	RAM_START + 00Ah
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\PBPPIC14.RAM	00018	A0002C	R6      VAR     WORD BANK0 SYSTEM       ' System Register
R6              		EQU	RAM_START + 00Ch
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\PBPPIC14.RAM	00019	A0002E	R7      VAR     WORD BANK0 SYSTEM       ' System Register
R7              		EQU	RAM_START + 00Eh
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\PBPPIC14.RAM	00020	A00030	R8      VAR     WORD BANK0 SYSTEM       ' System Register
R8              		EQU	RAM_START + 010h
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\PBPPIC14.RAM	00026	A00032	FLAGS   VAR     BYTE BANK0 SYSTEM       ' Static flags
FLAGS           		EQU	RAM_START + 012h
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\PBPPIC14.RAM	00025	A00033	GOP     VAR     BYTE BANK0 SYSTEM       ' Gen Op Parameter
GOP             		EQU	RAM_START + 013h
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\PBPPIC14.RAM	00022	A00034	RM1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Mask
RM1             		EQU	RAM_START + 014h
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\PBPPIC14.RAM	00024	A00035	RM2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Mask
RM2             		EQU	RAM_START + 015h
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\PBPPIC14.RAM	00021	A00036	RR1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Register
RR1             		EQU	RAM_START + 016h
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\PBPPIC14.RAM	00023	A00037	RR2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Register
RR2             		EQU	RAM_START + 017h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00077	A00038	data_in var Byte[payloadLengthD] 'data received
_data_in         		EQU	RAM_START + 018h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00076	A0004F	data_out VAR BYTE[payloadLengthD] 'data sent
_data_out        		EQU	RAM_START + 02Fh
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00063	A00066	ser_data var byte[payloadLength]
_ser_data        		EQU	RAM_START + 046h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00079	A0007C	comm_data var word 'communication data
_comm_data       		EQU	RAM_START + 05Ch
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00078	A0007E	comm_party var word 'communication party
_comm_party      		EQU	RAM_START + 05Eh
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00064	A000A0	TEMP_data var byte[payloadLength]
_TEMP_data       		EQU	RAM_START + 080h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00075	A000B6	dat var word 'unscaled ADC data
_dat             		EQU	RAM_START + 096h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00074	A000B8	Pack_count VAR word 'number of packets sent
_Pack_count      		EQU	RAM_START + 098h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00001	A000BA	'@  __config _INTRC_OSC_NOCLKOUT & _WDT_ON & _MCLRE_OFF & _CP_OFF & _CPD_OFF & _FCMEN_OFF & _IESO_OFF & _BOR_ON & _PWRTE_ON
T1              		EQU	RAM_START + 09Ah
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00001	A000BC	'@  __config _INTRC_OSC_NOCLKOUT & _WDT_ON & _MCLRE_OFF & _CP_OFF & _CPD_OFF & _FCMEN_OFF & _IESO_OFF & _BOR_ON & _PWRTE_ON
T2              		EQU	RAM_START + 09Ch
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00001	A000BE	'@  __config _INTRC_OSC_NOCLKOUT & _WDT_ON & _MCLRE_OFF & _CP_OFF & _CPD_OFF & _FCMEN_OFF & _IESO_OFF & _BOR_ON & _PWRTE_ON
T3              		EQU	RAM_START + 09Eh
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00065	A000C0	EEPROMBYTE      VAR BYTE
_EEPROMBYTE      		EQU	RAM_START + 0A0h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00066	A000C1	EEPROMBYTEREAD  VAR BYTE
_EEPROMBYTEREAD  		EQU	RAM_START + 0A1h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00067	A000C2	EEPROMPOSITION  VAR BYTE
_EEPROMPOSITION  		EQU	RAM_START + 0A2h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00068	A000C3	ei              var byte
_ei              		EQU	RAM_START + 0A3h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00050	A000C4	i VAR BYTE 'loop counter
_i               		EQU	RAM_START + 0A4h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00051	A000C5	j var byte
_j               		EQU	RAM_START + 0A5h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00052	A000C6	k var byte
_k               		EQU	RAM_START + 0A6h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00056	A000C7	manageSerial var byte
_manageSerial    		EQU	RAM_START + 0A7h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00073	A000C8	minutes var byte
_minutes         		EQU	RAM_START + 0A8h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00069	A000C9	num_byte var byte 'temp value
_num_byte        		EQU	RAM_START + 0A9h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00072	A000CA	seconds var byte
_seconds         		EQU	RAM_START + 0AAh
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00059	A000CB	temp1_byte var byte
_temp1_byte      		EQU	RAM_START + 0ABh
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00060	A000CC	temp2_byte var byte
_temp2_byte      		EQU	RAM_START + 0ACh
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00061	A000CD	temp3_byte var byte
_temp3_byte      		EQU	RAM_START + 0ADh
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00062	A000CE	temp4_byte var byte
_temp4_byte      		EQU	RAM_START + 0AEh
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00058	A000CF	temp_byte var byte
_temp_byte       		EQU	RAM_START + 0AFh
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00057	A000D0	temp_byte_int var byte
_temp_byte_int   		EQU	RAM_START + 0B0h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00071	A000D1	ticks var byte
_ticks           		EQU	RAM_START + 0B1h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00070	A000D2	val var byte 'temp value
_val             		EQU	RAM_START + 0B2h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00053	A000D3	w VAR BYTE
_w               		EQU	RAM_START + 0B3h
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00023	PORTL   VAR     PORTA
_PORTL           		EQU	 PORTA
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00024	PORTH   VAR     PORTC
_PORTH           		EQU	 PORTC
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00025	TRISL   VAR     TRISA
_TRISL           		EQU	 TRISA
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00026	TRISH   VAR     TRISC
_TRISH           		EQU	 TRISC
#define _SSPEN           	_SSPCON??5
#define _CKP             	_SSPCON??4
#define _SMP             	_SSPSTAT??7
#define _CKE             	_SSPSTAT??6
#define _SSPIF           	_PIR1??3
#define _ser_lcd         	_PORTB??7
#define _Ce              	_PORTA??2
#define _CSN             	_PORTC??0
#define _Irq             	_PORTC??2
#define _SSPCON??5       	 SSPCON, 005h
#define _SSPCON??4       	 SSPCON, 004h
#define _SSPSTAT??7      	 SSPSTAT, 007h
#define _SSPSTAT??6      	 SSPSTAT, 006h
#define _PIR1??3         	 PIR1, 003h
#define _PORTB??7        	 PORTB, 007h
#define _PORTA??2        	 PORTA, 002h
#define _PORTC??0        	 PORTC, 000h
#define _PORTC??2        	 PORTC, 002h
#define _SSPCON??0       	 SSPCON, 000h
#define _val??0          	_val, 000h
#define _INTCON??2       	 INTCON, 002h
#define _PIR1??5         	 PIR1, 005h
#define _RCSTA??2        	 RCSTA, 002h
#define _INTCON??7       	 INTCON, 007h

; Constants.
_payloadLength   		EQU	00016h
_payloadLengthD  		EQU	00017h
_Idle_int        		EQU	00000h
_Max_rt          		EQU	00010h
_Tx_inter        		EQU	00030h
_Rx_ds           		EQU	00040h
_Read_reg        		EQU	00000h
_Write_reg       		EQU	00020h
_Rd_rx_pload     		EQU	00061h
_Wr_tx_pload     		EQU	000A0h
_Flush_tx        		EQU	000E1h
_Flush_rx        		EQU	000E2h
_Reuse_tx_pl     		EQU	000E3h
_Nop_comm        		EQU	000FFh
_Config_nrf      		EQU	00000h
_En_aa           		EQU	00001h
_En_rxaddr       		EQU	00002h
_Setup_aw        		EQU	00003h
_Setup_retr      		EQU	00004h
_Rf_ch           		EQU	00005h
_Rf_setup        		EQU	00006h
_Stat_us         		EQU	00007h
_Observe_tx      		EQU	00008h
_Cd              		EQU	00009h
_Rx_addr_p0      		EQU	0000Ah
_Rx_addr_p1      		EQU	0000Bh
_Rx_addr_p2      		EQU	0000Ch
_Rx_addr_p3      		EQU	0000Dh
_Rx_addr_p4      		EQU	0000Eh
_Rx_addr_p5      		EQU	0000Fh
_Tx_addr         		EQU	00010h
_Rx_pw_p0        		EQU	00011h
_Rx_pw_p1        		EQU	00012h
_Rx_pw_p2        		EQU	00013h
_Rx_pw_p3        		EQU	00014h
_Rx_pw_p4        		EQU	00015h
_Rx_pw_p5        		EQU	00016h
_Fifo_status     		EQU	00017h

; EEPROM data.
	ORG EEPROM_START

	ORG EEPROM_START + 000h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00014	EEPROM  0, [40,"R","O","B","I","K",0,0,0,0,0,0,0,0,0,0]
	DE	028h
	DE	052h
	DE	04Fh
	DE	042h
	DE	049h
	DE	04Bh
	DE	000h
	DE	000h
	DE	000h
	DE	000h
	DE	000h
	DE	000h
	DE	000h
	DE	000h
	DE	000h
	DE	000h

	INCLUDE	"USBSTI~2.MAC"
	INCLUDE	"PBPPIC14.LIB"


; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00012	BANK0   $0020, $007F
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00013	BANK1   $00A0, $00EF
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00014	BANK2   $0120, $016F
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00015	EEPROM  $2100, $21FF
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00016	LIBRARY "PBPPIC14"
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00017	DEFINE  CODE_SIZE 4
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00018	DEFINE	CCP1_REG PORTC
; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00019	DEFINE	CCP1_BIT 5

; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00021	        include "PIC14EXT.BAS"

; D:\DOCUME~1\PICDEV~1\PBP\PBP260\16F690.BAS	00028	        include "PBPPIC14.RAM"

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00003	@ DEVICE PIC16F690,INTRC_OSC_NOCLKOUT

	ASM?
 DEVICE PIC16F690,INTRC_OSC_NOCLKOUT

	ENDASM?


; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00004	@ DEVICE PIC16F690,WDT_ON

	ASM?
 DEVICE PIC16F690,WDT_ON

	ENDASM?


; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00005	@ DEVICE PIC16F690,MCLR_OFF

	ASM?
 DEVICE PIC16F690,MCLR_OFF

	ENDASM?


; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00006	@ DEVICE PIC16F690,CPD_OFF

	ASM?
 DEVICE PIC16F690,CPD_OFF

	ENDASM?


; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00007	@ DEVICE PIC16F690,BOD_ON

	ASM?
 DEVICE PIC16F690,BOD_ON

	ENDASM?


; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00008	@ DEVICE PIC16F690,PWRT_ON

	ASM?
 DEVICE PIC16F690,PWRT_ON

	ENDASM?

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00014	EEPROM  0, [40,"R","O","B","I","K",0,0,0,0,0,0,0,0,0,0]
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00016	 DEFINE OSC 8
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00017	 DEFINE HSER_RCSTA 90h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00018	 DEFINE HSER_TXSTA 24h
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00019	 DEFINE HSER_SPBRG 51
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00020	 DEFINE HSER_CLROERR 1

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00022	 OSCCON = %01110000 ' Internal 8MHz osc
	MOVE?CB	070h, OSCCON

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00023	 ANSEL = 0
	MOVE?CB	000h, ANSEL

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00024	 ANSELH = 0
	MOVE?CB	000h, ANSELH

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00025	 CM1CON0 = 0
	MOVE?CB	000h, CM1CON0

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00026	 CM2CON0 = 0
	MOVE?CB	000h, CM2CON0

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00029	INTCON = %11100000
	MOVE?CB	0E0h, INTCON

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00030	PIE1 = %00100000
	MOVE?CB	020h, PIE1

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00031	OPTION_REG = %00000111
	MOVE?CB	007h, OPTION_REG

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00033	on interrupt goto intManagement
	ONINT?LL	_intManagement, L00001

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00034	ENABLE
	ENABLE?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00036	TRISA = %00000000 'Set PORTA to all output, RA0 input
	ICALL?L	L00001
	MOVE?CB	000h, TRISA

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00037	TRISB = %00010000 'Set , SDI input
	ICALL?L	L00001
	MOVE?CB	010h, TRISB

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00038	TRISC = %00000100 'Set IRQ input, 
	ICALL?L	L00001
	MOVE?CB	004h, TRISC
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00054	payloadLength con 22
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00055	payloadLengthD con 23
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00081	Idle_int con $00 'Idle no interrupt pending
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00082	Max_rt con $10 'Max # of Tx retrans interrupt
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00083	Tx_inter con $30 'Tx interrupted
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00084	Rx_ds con $40 'Rx data received
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00086	Read_reg con $00 'def read command to register
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00087	Write_reg CON $20 'def write command to register
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00088	Rd_rx_pload con $61 'def Rx payload register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00089	Wr_tx_pload con $A0 'def Tx payload register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00090	Flush_tx con $E1 'def flush Tx register command
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00091	Flush_rx con $E2 'def flush Rx register command
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00092	Reuse_tx_pl con $E3 'def reuse Tx payload register command
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00093	Nop_comm con $FF 'def No operation
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00095	Config_nrf con $00 'Config register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00096	En_aa con $01 'enable auto acknowledgment register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00097	En_rxaddr con $02 'enable RX addresses register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00098	Setup_aw con $03 'setup address width register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00099	Setup_retr con $04 'setup auto retrans register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00100	Rf_ch con $05 'RF channel register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00101	Rf_setup con $06 'RF setup register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00102	Stat_us con $07 'Status register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00103	Observe_tx con $08 'Observe TX register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00104	Cd con $09 'Carrier detect register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00105	Rx_addr_p0 con $0A 'RX address pipe0 register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00106	Rx_addr_p1 con $0B 'RX address pipe1 register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00107	Rx_addr_p2 con $0C 'RX address pipe2 register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00108	Rx_addr_p3 con $0D 'RX address pipe3 register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00109	Rx_addr_p4 con $0E 'RX address pipe4 register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00110	Rx_addr_p5 con $0F 'RX address pipe5 register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00111	Tx_addr con $10 'TX address register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00112	Rx_pw_p0 con $11 'RX payload width pipe0 register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00113	Rx_pw_p1 con $12 'RX payload width pipe1 register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00114	Rx_pw_p2 con $13 'RX payload width pipe2 register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00115	Rx_pw_p3 con $14 'RX payload width pipe3 register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00116	Rx_pw_p4 con $15 'RX payload width pipe4 register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00117	Rx_pw_p5 con $16 'RX payload width pipe5 register address
; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00118	Fifo_status con $17 'FIFO status register register address

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00119	clear
	ICALL?L	L00001
	CLEAR?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00120	pause 500
	ICALL?L	L00001
	PAUSE?C	001F4h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00122	SSPEN = 1 'enable SPI pins
	ICALL?L	L00001
	MOVE?CT	001h, _SSPEN

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00123	SSPCON.0=1 'SPI rate=OSC/16
	ICALL?L	L00001
	MOVE?CT	001h, _SSPCON??0

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00124	CKP = 0 'clock idle low
	ICALL?L	L00001
	MOVE?CT	000h, _CKP

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00125	CKE = 1 'transmit on active to idle
	ICALL?L	L00001
	MOVE?CT	001h, _CKE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00126	SSPIF = 0 'clear buffer full status
	ICALL?L	L00001
	MOVE?CT	000h, _SSPIF

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00127	SMP = 0 'sample in middle of data
	ICALL?L	L00001
	MOVE?CT	000h, _SMP

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00129	Ce=1 'init spi pins
	ICALL?L	L00001
	MOVE?CT	001h, _Ce

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00130	pause 10 'wait 10 ms hardware is stable
	ICALL?L	L00001
	PAUSE?C	00Ah

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00131	Ce=0 'set CE pin low disable Rx
	ICALL?L	L00001
	MOVE?CT	000h, _Ce

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00132	CSN=0 'set CSN pin low
	ICALL?L	L00001
	MOVE?CT	000h, _CSN

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00133	Pack_count=0 'number of packets sent
	ICALL?L	L00001
	MOVE?CW	000h, _Pack_count

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00135	commonSettings:

	LABEL?L	_commonSettings	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00136	GOSUB commonRXTX
	ICALL?L	L00001
	GOSUB?L	_commonRXTX

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00138	Main_rx:

	LABEL?L	_Main_rx	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00139	gosub setup_rx 'setup Rx
	ICALL?L	L00001
	GOSUB?L	_setup_rx

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00140	pause 2 'delay for Rx starting
	ICALL?L	L00001
	PAUSE?C	002h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00141	Ce=1 'set nRF24L01 in Rx mode
	ICALL?L	L00001
	MOVE?CT	001h, _Ce

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00142	irqLoop:

	LABEL?L	_irqLoop	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00144	if (manageSerial==1) then
	ICALL?L	L00001
	CMPNE?BCL	_manageSerial, 001h, L00004

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00145	    manageserial = 0
	ICALL?L	L00001
	MOVE?CB	000h, _manageSerial

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00146	    if ((ser_data[0] == "C" OR ser_data[0] == "c") AND ser_data[1] == "=") THEN 'channel
	ICALL?L	L00001
	CMPEQ?BCB	_ser_data, 043h, T1
	CMPEQ?BCB	_ser_data, 063h, T2
	LOR?BBW	T1, T2, T2
	CMPEQ?BCB	_ser_data + 00001h, 03Dh, T3
	LAND?WBW	T2, T3, T3
	CMPF?WL	T3, L00006

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00147	        i=2
	ICALL?L	L00001
	MOVE?CB	002h, _i

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00148	        GOSUB convertInputData
	ICALL?L	L00001
	GOSUB?L	_convertInputData

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00149	        GOSUB saveChannel
	ICALL?L	L00001
	GOSUB?L	_saveChannel

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00150	        GOSUB commonSettings
	ICALL?L	L00001
	GOSUB?L	_commonSettings

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00151	    elseif ((ser_data[0] == "P" OR ser_data[0] == "p") AND ser_data[1] == "=") THEN 'password
	ICALL?L	L00001
	GOTO?L	L00007
	LABEL?L	L00006	
	CMPEQ?BCB	_ser_data, 050h, T1
	CMPEQ?BCB	_ser_data, 070h, T2
	LOR?BBW	T1, T2, T2
	CMPEQ?BCB	_ser_data + 00001h, 03Dh, T3
	LAND?WBW	T2, T3, T3
	CMPF?WL	T3, L00008

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00152	        GOSUB savePwd
	ICALL?L	L00001
	GOSUB?L	_savePwd

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00153	        GOSUB commonSettings
	ICALL?L	L00001
	GOSUB?L	_commonSettings

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00154	    elseif ((ser_data[0] == "A" OR ser_data[0] == "a") AND ser_data[1] == "=") THEN 'add device
	ICALL?L	L00001
	GOTO?L	L00007
	LABEL?L	L00008	
	CMPEQ?BCB	_ser_data, 041h, T1
	CMPEQ?BCB	_ser_data, 061h, T2
	LOR?BBW	T1, T2, T2
	CMPEQ?BCB	_ser_data + 00001h, 03Dh, T3
	LAND?WBW	T2, T3, T3
	CMPF?WL	T3, L00010

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00155	        i=2
	ICALL?L	L00001
	MOVE?CB	002h, _i

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00156	        GOSUB convertInputData
	ICALL?L	L00001
	GOSUB?L	_convertInputData

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00157	        if (temp_byte != 0) then
	ICALL?L	L00001
	CMPEQ?BCL	_temp_byte, 000h, L00012

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00158	            gosub addNewDevice
	ICALL?L	L00001
	GOSUB?L	_addNewDevice

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00159	        else
	ICALL?L	L00001
	GOTO?L	L00013
	LABEL?L	L00012	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00160	            gosub printError
	ICALL?L	L00001
	GOSUB?L	_printError

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00161	        endif
	ICALL?L	L00001
	LABEL?L	L00013	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00162	    elseif ((ser_data[0] == "S" OR ser_data[0] == "s")) THEN 'print config
	ICALL?L	L00001
	GOTO?L	L00007
	LABEL?L	L00010	
	CMPEQ?BCB	_ser_data, 053h, T1
	CMPEQ?BCB	_ser_data, 073h, T2
	LOR?BBW	T1, T2, T2
	CMPF?WL	T2, L00014

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00163	        GOSUB printConfig
	ICALL?L	L00001
	GOSUB?L	_printConfig

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00164	    else
	ICALL?L	L00001
	GOTO?L	L00007
	LABEL?L	L00014	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00165	        i=0
	ICALL?L	L00001
	MOVE?CB	000h, _i

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00166	        gosub convertInputData
	ICALL?L	L00001
	GOSUB?L	_convertInputData

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00167	        if (temp_byte == "a") then
	ICALL?L	L00001
	CMPNE?BCL	_temp_byte, 061h, L00016

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00168	            gosub printError
	ICALL?L	L00001
	GOSUB?L	_printError

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00169	        elseif (ser_data[i] != "=") then
	ICALL?L	L00001
	GOTO?L	L00017
	LABEL?L	L00016	
	AOUT?BBB	_ser_data, _i, T1
	CMPEQ?BCL	T1, 03Dh, L00018

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00170	            gosub printError
	ICALL?L	L00001
	GOSUB?L	_printError

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00171	        else
	ICALL?L	L00001
	GOTO?L	L00017
	LABEL?L	L00018	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00172	            ser_data[0] = temp_byte
	ICALL?L	L00001
	MOVE?BB	_temp_byte, _ser_data

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00173	            for j = 1 to payloadLength
	ICALL?L	L00001
	MOVE?CB	001h, _j
	LABEL?L	L00020	
	CMPGT?BCL	_j, _payloadLength, L00021

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00174	                ser_data[j]=ser_data[i + 1]
	ICALL?L	L00001
	ADD?BCW	_i, 001h, T1
	AOUT?BWB	_ser_data, T1, T1
	AIN?BBB	T1, _ser_data, _j

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00175	                if ser_data[j] == 10 then endCycleS
	ICALL?L	L00001
	AOUT?BBB	_ser_data, _j, T1
	CMPEQ?BCL	T1, 00Ah, _endCycleS

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00176	                i = i + 1
	ICALL?L	L00001
	ADD?BCB	_i, 001h, _i

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00177	            next j
	ICALL?L	L00001
	NEXT?BCL	_j, 001h, L00020
	LABEL?L	L00021	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00178	            :endCycleS

	LABEL?L	_endCycleS	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00179	        GOSUB commonRXTX
	ICALL?L	L00001
	GOSUB?L	_commonRXTX

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00180	        gosub debounce
	ICALL?L	L00001
	GOSUB?L	_debounce

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00181	        GOSUB sendData
	ICALL?L	L00001
	GOSUB?L	_sendData

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00182	        gosub debounce
	ICALL?L	L00001
	GOSUB?L	_debounce

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00183	        endif
	ICALL?L	L00001
	LABEL?L	L00017	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00184	    endif
	ICALL?L	L00001
	LABEL?L	L00007	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00185	    GOTO Main_rx:
	ICALL?L	L00001
	GOTO?L	_Main_rx

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00186	endif
	ICALL?L	L00001
	LABEL?L	L00004	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00187	If Irq !=0 then irqLoop 'wait until IRQ, active low
	ICALL?L	L00001
	CMPNE?TCL	_Irq, 000h, _irqLoop

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00189	Ce=0
	ICALL?L	L00001
	MOVE?CT	000h, _Ce

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00190	lop:

	LABEL?L	_lop	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00191	data_out[0]=rd_rx_pload 'Read 5 bytes Rx pload
	ICALL?L	L00001
	MOVE?CB	_Rd_rx_pload, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00192	num_byte=payloadLength
	ICALL?L	L00001
	MOVE?CB	_payloadLength, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00193	gosub spi_read
	ICALL?L	L00001
	GOSUB?L	_spi_read

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00194	HSEROUT["+", DEC data_in[1], " "]
	ICALL?L	L00001
	HSEROUT?C	02Bh
	HSEROUTCOUNT?C	000h
	HSEROUTNUM?B	_data_in + 00001h
	HSEROUTDEC?	
	HSEROUT?C	020h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00195	for w=2 to payloadLength
	ICALL?L	L00001
	MOVE?CB	002h, _w
	LABEL?L	L00022	
	CMPGT?BCL	_w, _payloadLength, L00023

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00196	    HSEROUT[data_in[w]]
	ICALL?L	L00001
	AOUT?BBB	_data_in, _w, T1
	HSEROUT?B	T1

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00197	    if (data_in[w]) == 10 then goto contInRcv
	ICALL?L	L00001
	AOUT?BBB	_data_in, _w, T1
	CMPNE?BCL	T1, 00Ah, L00024
	GOTO?L	_contInRcv
	LABEL?L	L00024	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00198	next w
	ICALL?L	L00001
	NEXT?BCL	_w, 001h, L00022
	LABEL?L	L00023	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00199	contInRcv:

	LABEL?L	_contInRcv	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00200	data_out[0]=Fifo_status 'Read FIFO status
	ICALL?L	L00001
	MOVE?CB	_Fifo_status, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00201	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00202	gosub spi_read
	ICALL?L	L00001
	GOSUB?L	_spi_read

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00203	val= data_in[1] 'FIFO status register
	ICALL?L	L00001
	MOVE?BB	_data_in + 00001h, _val

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00204	if val.0=0 then lop 'test RX_EMPTY=1, RX_FIFO empty
	ICALL?L	L00001
	CMPEQ?TCL	_val??0, 000h, _lop

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00205	endRx:

	LABEL?L	_endRx	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00206	data_out[0]=Write_reg+Stat_us 'reset RX_DR status bit
	ICALL?L	L00001
	MOVE?CB	027h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00207	data_out[1]=%01000000 'write 1 tp RX_DR to reset IRQ
	ICALL?L	L00001
	MOVE?CB	040h, _data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00208	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00209	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00210	GOTO Main_rx
	ICALL?L	L00001
	GOTO?L	_Main_rx

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00211	end
	ICALL?L	L00001
	END?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00213	disable
	DISABLE?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00214	intManagement:

	LABEL?L	_intManagement	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00215	        if (INTCON.2 == 1) then
	CMPNE?TCL	_INTCON??2, 001h, L00026

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00216	           ticks = ticks + 1      ' Count pieces of seconds
	ADD?BCB	_ticks, 001h, _ticks

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00217	           If ticks < 31 Then tiexit
	CMPLT?BCL	_ticks, 01Fh, _tiexit

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00218	           ticks = 0
	MOVE?CB	000h, _ticks

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00219	           seconds = seconds + 1
	ADD?BCB	_seconds, 001h, _seconds

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00220	           if seconds <= 58 then tiexit
	CMPLE?BCL	_seconds, 03Ah, _tiexit

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00221	           seconds = 0
	MOVE?CB	000h, _seconds

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00222	           minutes = minutes + 1
	ADD?BCB	_minutes, 001h, _minutes

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00223	           tiexit: 

	LABEL?L	_tiexit	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00224	           INTCON.2 = 0
	MOVE?CT	000h, _INTCON??2

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00225	        else 
	GOTO?L	L00027
	LABEL?L	L00026	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00226	            if (PIR1.5 == 1) then
	CMPNE?TCL	_PIR1??5, 001h, L00028

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00227	                 if (manageSerial == 1) then mainInt
	CMPEQ?BCL	_manageSerial, 001h, _mainInt

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00228	                 if (RCSTA.2 == 1) then
	CMPNE?TCL	_RCSTA??2, 001h, L00030

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00229	                    hserin[temp_byte_int]
	HSERIN?B	_temp_byte_int

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00230	                 endif
	LABEL?L	L00030	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00231	                 HSERIN 100, mainInt, [wait ("AT+"), STR ser_data\payloadLength\10]
	HSERINTIME?C	064h

	LABEL?L	L00002	
	HSERINWAIT?CLL	041h, L00002, _mainInt
	HSERINWAIT?CLL	054h, L00002, _mainInt
	HSERINWAIT?CLL	02Bh, L00002, _mainInt
	HSERINCOUNT?C	_payloadLength
	HSERINCHAR?C	00Ah
	HSERINSTRC?BL	_ser_data, _mainInt

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00232	                 manageSerial = 1
	MOVE?CB	001h, _manageSerial

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00233	                 :mainInt

	LABEL?L	_mainInt	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00234	            ENDIF
	LABEL?L	L00028	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00235	        endif
	LABEL?L	L00027	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00236	        INTCON.7 = 1
	MOVE?CT	001h, _INTCON??7

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00237	resume
	RESUME?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00238	enable
	ENABLE?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00240	cleanSerialPort:

	LABEL?L	_cleanSerialPort	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00241	    while (PIR1.5==1) 
	ICALL?L	L00001
	LABEL?L	L00032	
	CMPNE?TCL	_PIR1??5, 001h, L00033

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00242	        hserin [temp_byte]
	ICALL?L	L00001
	HSERIN?B	_temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00243	    wend
	ICALL?L	L00001
	GOTO?L	L00032
	LABEL?L	L00033	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00244	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00246	commonRXTX:

	LABEL?L	_commonRXTX	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00247	data_out[0]=Write_reg+Rx_addr_p0 'Rx address for pipe0
	ICALL?L	L00001
	MOVE?CB	02Ah, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00248	READ 1, data_out[1]
	ICALL?L	L00001
	READADDRESS?C	001h
	READ?B	_data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00249	READ 2, data_out[2]
	ICALL?L	L00001
	READADDRESS?C	002h
	READ?B	_data_out + 00002h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00250	READ 3, data_out[3]
	ICALL?L	L00001
	READADDRESS?C	003h
	READ?B	_data_out + 00003h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00251	READ 4, data_out[4]
	ICALL?L	L00001
	READADDRESS?C	004h
	READ?B	_data_out + 00004h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00252	READ 5, data_out[5]
	ICALL?L	L00001
	READADDRESS?C	005h
	READ?B	_data_out + 00005h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00253	num_byte=5
	ICALL?L	L00001
	MOVE?CB	005h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00254	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00255	data_out[0]=Write_reg+En_aa 'enable auto ACK pipe0
	ICALL?L	L00001
	MOVE?CB	021h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00256	data_out[1]=$01 '1 enable, 0 disable
	ICALL?L	L00001
	MOVE?CB	001h, _data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00257	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00258	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00259	data_out[0]=Write_reg+En_rxaddr 'enable Rx address pipe0
	ICALL?L	L00001
	MOVE?CB	022h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00260	data_out[1]=$01
	ICALL?L	L00001
	MOVE?CB	001h, _data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00261	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00262	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00263	data_out[0]=Write_reg+Rf_ch 'Set RF channel
	ICALL?L	L00001
	MOVE?CB	025h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00264	READ 0, data_out[1] 'number of channel used
	ICALL?L	L00001
	READADDRESS?C	000h
	READ?B	_data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00265	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00266	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00267	data_out[0]=Write_reg+Rx_pw_p0 'Set Rx pload width pipe0
	ICALL?L	L00001
	MOVE?CB	031h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00268	data_out[1]=payloadLength 'number of bytes used in data sent
	ICALL?L	L00001
	MOVE?CB	_payloadLength, _data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00269	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00270	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00271	data_out[0]=Write_reg+Rf_setup 'Set RF: 'Set RF:5dbm, 1Mbps
	ICALL?L	L00001
	MOVE?CB	026h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00272	data_out[1]=%00110111
	ICALL?L	L00001
	MOVE?CB	037h, _data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00273	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00274	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00276	temp_byte = 1
	ICALL?L	L00001
	MOVE?CB	001h, _temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00277	gosub setBank
	ICALL?L	L00001
	GOSUB?L	_setBank

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00278	temp_byte = 0 : temp1_byte = $40 : temp2_byte = $4B : temp3_byte = $01 : temp4_byte = $E2
	ICALL?L	L00001
	MOVE?CB	000h, _temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00278	temp_byte = 0 : temp1_byte = $40 : temp2_byte = $4B : temp3_byte = $01 : temp4_byte = $E2
	ICALL?L	L00001
	MOVE?CB	040h, _temp1_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00278	temp_byte = 0 : temp1_byte = $40 : temp2_byte = $4B : temp3_byte = $01 : temp4_byte = $E2
	ICALL?L	L00001
	MOVE?CB	04Bh, _temp2_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00278	temp_byte = 0 : temp1_byte = $40 : temp2_byte = $4B : temp3_byte = $01 : temp4_byte = $E2
	ICALL?L	L00001
	MOVE?CB	001h, _temp3_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00278	temp_byte = 0 : temp1_byte = $40 : temp2_byte = $4B : temp3_byte = $01 : temp4_byte = $E2
	ICALL?L	L00001
	MOVE?CB	0E2h, _temp4_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00279	gosub conf4bytes
	ICALL?L	L00001
	GOSUB?L	_conf4bytes

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00280	temp_byte = 1 : temp1_byte = $C0 : temp2_byte = $4B : temp3_byte = $00 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	001h, _temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00280	temp_byte = 1 : temp1_byte = $C0 : temp2_byte = $4B : temp3_byte = $00 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	0C0h, _temp1_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00280	temp_byte = 1 : temp1_byte = $C0 : temp2_byte = $4B : temp3_byte = $00 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	04Bh, _temp2_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00280	temp_byte = 1 : temp1_byte = $C0 : temp2_byte = $4B : temp3_byte = $00 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	000h, _temp3_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00280	temp_byte = 1 : temp1_byte = $C0 : temp2_byte = $4B : temp3_byte = $00 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	000h, _temp4_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00281	gosub conf4bytes
	ICALL?L	L00001
	GOSUB?L	_conf4bytes

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00282	temp_byte = 2 : temp1_byte = $D0 : temp2_byte = $FC : temp3_byte = $8C : temp4_byte = $02
	ICALL?L	L00001
	MOVE?CB	002h, _temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00282	temp_byte = 2 : temp1_byte = $D0 : temp2_byte = $FC : temp3_byte = $8C : temp4_byte = $02
	ICALL?L	L00001
	MOVE?CB	0D0h, _temp1_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00282	temp_byte = 2 : temp1_byte = $D0 : temp2_byte = $FC : temp3_byte = $8C : temp4_byte = $02
	ICALL?L	L00001
	MOVE?CB	0FCh, _temp2_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00282	temp_byte = 2 : temp1_byte = $D0 : temp2_byte = $FC : temp3_byte = $8C : temp4_byte = $02
	ICALL?L	L00001
	MOVE?CB	08Ch, _temp3_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00282	temp_byte = 2 : temp1_byte = $D0 : temp2_byte = $FC : temp3_byte = $8C : temp4_byte = $02
	ICALL?L	L00001
	MOVE?CB	002h, _temp4_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00283	gosub conf4bytes
	ICALL?L	L00001
	GOSUB?L	_conf4bytes

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00284	temp_byte = 3 : temp1_byte = $99 : temp2_byte = $00 : temp3_byte = $39 : temp4_byte = $41
	ICALL?L	L00001
	MOVE?CB	003h, _temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00284	temp_byte = 3 : temp1_byte = $99 : temp2_byte = $00 : temp3_byte = $39 : temp4_byte = $41
	ICALL?L	L00001
	MOVE?CB	099h, _temp1_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00284	temp_byte = 3 : temp1_byte = $99 : temp2_byte = $00 : temp3_byte = $39 : temp4_byte = $41
	ICALL?L	L00001
	MOVE?CB	000h, _temp2_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00284	temp_byte = 3 : temp1_byte = $99 : temp2_byte = $00 : temp3_byte = $39 : temp4_byte = $41
	ICALL?L	L00001
	MOVE?CB	039h, _temp3_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00284	temp_byte = 3 : temp1_byte = $99 : temp2_byte = $00 : temp3_byte = $39 : temp4_byte = $41
	ICALL?L	L00001
	MOVE?CB	041h, _temp4_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00285	gosub conf4bytes
	ICALL?L	L00001
	GOSUB?L	_conf4bytes

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00286	temp_byte = 4 : temp1_byte = $B9 : temp2_byte = $9E : temp3_byte = $86 : temp4_byte = $0B
	ICALL?L	L00001
	MOVE?CB	004h, _temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00286	temp_byte = 4 : temp1_byte = $B9 : temp2_byte = $9E : temp3_byte = $86 : temp4_byte = $0B
	ICALL?L	L00001
	MOVE?CB	0B9h, _temp1_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00286	temp_byte = 4 : temp1_byte = $B9 : temp2_byte = $9E : temp3_byte = $86 : temp4_byte = $0B
	ICALL?L	L00001
	MOVE?CB	09Eh, _temp2_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00286	temp_byte = 4 : temp1_byte = $B9 : temp2_byte = $9E : temp3_byte = $86 : temp4_byte = $0B
	ICALL?L	L00001
	MOVE?CB	086h, _temp3_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00286	temp_byte = 4 : temp1_byte = $B9 : temp2_byte = $9E : temp3_byte = $86 : temp4_byte = $0B
	ICALL?L	L00001
	MOVE?CB	00Bh, _temp4_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00287	gosub conf4bytes
	ICALL?L	L00001
	GOSUB?L	_conf4bytes

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00288	temp_byte = 5 : temp1_byte = $24 : temp2_byte = $06 : temp3_byte = $7F : temp4_byte = $A6
	ICALL?L	L00001
	MOVE?CB	005h, _temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00288	temp_byte = 5 : temp1_byte = $24 : temp2_byte = $06 : temp3_byte = $7F : temp4_byte = $A6
	ICALL?L	L00001
	MOVE?CB	024h, _temp1_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00288	temp_byte = 5 : temp1_byte = $24 : temp2_byte = $06 : temp3_byte = $7F : temp4_byte = $A6
	ICALL?L	L00001
	MOVE?CB	006h, _temp2_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00288	temp_byte = 5 : temp1_byte = $24 : temp2_byte = $06 : temp3_byte = $7F : temp4_byte = $A6
	ICALL?L	L00001
	MOVE?CB	07Fh, _temp3_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00288	temp_byte = 5 : temp1_byte = $24 : temp2_byte = $06 : temp3_byte = $7F : temp4_byte = $A6
	ICALL?L	L00001
	MOVE?CB	0A6h, _temp4_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00289	gosub conf4bytes
	ICALL?L	L00001
	GOSUB?L	_conf4bytes

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00290	for k = 6 TO 11
	ICALL?L	L00001
	MOVE?CB	006h, _k
	LABEL?L	L00034	
	CMPGT?BCL	_k, 00Bh, L00035

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00291	    temp_byte = k : temp1_byte = $00 : temp2_byte = $00 : temp3_byte = $00 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?BB	_k, _temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00291	    temp_byte = k : temp1_byte = $00 : temp2_byte = $00 : temp3_byte = $00 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	000h, _temp1_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00291	    temp_byte = k : temp1_byte = $00 : temp2_byte = $00 : temp3_byte = $00 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	000h, _temp2_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00291	    temp_byte = k : temp1_byte = $00 : temp2_byte = $00 : temp3_byte = $00 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	000h, _temp3_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00291	    temp_byte = k : temp1_byte = $00 : temp2_byte = $00 : temp3_byte = $00 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	000h, _temp4_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00292	    gosub conf4bytes
	ICALL?L	L00001
	GOSUB?L	_conf4bytes

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00293	next k
	ICALL?L	L00001
	NEXT?BCL	_k, 001h, L00034
	LABEL?L	L00035	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00294	temp_byte = 12 : temp1_byte = $00 : temp2_byte = $12 : temp3_byte = $73 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	00Ch, _temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00294	temp_byte = 12 : temp1_byte = $00 : temp2_byte = $12 : temp3_byte = $73 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	000h, _temp1_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00294	temp_byte = 12 : temp1_byte = $00 : temp2_byte = $12 : temp3_byte = $73 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	012h, _temp2_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00294	temp_byte = 12 : temp1_byte = $00 : temp2_byte = $12 : temp3_byte = $73 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	073h, _temp3_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00294	temp_byte = 12 : temp1_byte = $00 : temp2_byte = $12 : temp3_byte = $73 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	000h, _temp4_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00295	gosub conf4bytes
	ICALL?L	L00001
	GOSUB?L	_conf4bytes

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00296	temp_byte = 13 : temp1_byte = $36 : temp2_byte = $b4 : temp3_byte = $80 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	00Dh, _temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00296	temp_byte = 13 : temp1_byte = $36 : temp2_byte = $b4 : temp3_byte = $80 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	036h, _temp1_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00296	temp_byte = 13 : temp1_byte = $36 : temp2_byte = $b4 : temp3_byte = $80 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	0B4h, _temp2_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00296	temp_byte = 13 : temp1_byte = $36 : temp2_byte = $b4 : temp3_byte = $80 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	080h, _temp3_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00296	temp_byte = 13 : temp1_byte = $36 : temp2_byte = $b4 : temp3_byte = $80 : temp4_byte = $00
	ICALL?L	L00001
	MOVE?CB	000h, _temp4_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00297	gosub conf4bytes
	ICALL?L	L00001
	GOSUB?L	_conf4bytes

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00298	data_out[0]=Write_reg+$0E
	ICALL?L	L00001
	MOVE?CB	02Eh, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00299	data_out[1]=$41
	ICALL?L	L00001
	MOVE?CB	041h, _data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00300	data_out[2]=$20
	ICALL?L	L00001
	MOVE?CB	020h, _data_out + 00002h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00301	data_out[3]=$08
	ICALL?L	L00001
	MOVE?CB	008h, _data_out + 00003h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00302	data_out[4]=$04
	ICALL?L	L00001
	MOVE?CB	004h, _data_out + 00004h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00303	data_out[5]=$81
	ICALL?L	L00001
	MOVE?CB	081h, _data_out + 00005h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00304	data_out[6]=$20
	ICALL?L	L00001
	MOVE?CB	020h, _data_out + 00006h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00305	data_out[7]=$CF
	ICALL?L	L00001
	MOVE?CB	0CFh, _data_out + 00007h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00306	data_out[8]=$F7
	ICALL?L	L00001
	MOVE?CB	0F7h, _data_out + 00008h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00307	data_out[9]=$FE
	ICALL?L	L00001
	MOVE?CB	0FEh, _data_out + 00009h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00308	data_out[10]=$FF
	ICALL?L	L00001
	MOVE?CB	0FFh, _data_out + 0000Ah

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00309	data_out[11]=$FF
	ICALL?L	L00001
	MOVE?CB	0FFh, _data_out + 0000Bh

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00310	num_byte=11
	ICALL?L	L00001
	MOVE?CB	00Bh, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00311	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00312	temp_byte = 0
	ICALL?L	L00001
	MOVE?CB	000h, _temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00313	gosub setBank
	ICALL?L	L00001
	GOSUB?L	_setBank

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00314	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00316	conf4bytes:

	LABEL?L	_conf4bytes	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00317	data_out[0]=Write_reg+temp_byte
	ICALL?L	L00001
	ADD?CBB	_Write_reg, _temp_byte, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00318	data_out[1]=temp1_byte
	ICALL?L	L00001
	MOVE?BB	_temp1_byte, _data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00319	data_out[2]=temp2_byte
	ICALL?L	L00001
	MOVE?BB	_temp2_byte, _data_out + 00002h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00320	data_out[3]=temp3_byte
	ICALL?L	L00001
	MOVE?BB	_temp3_byte, _data_out + 00003h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00321	data_out[4]=temp4_byte
	ICALL?L	L00001
	MOVE?BB	_temp4_byte, _data_out + 00004h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00322	num_byte=4
	ICALL?L	L00001
	MOVE?CB	004h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00323	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00324	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00326	setBank:

	LABEL?L	_setBank	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00327	data_out[0]=Read_reg+$07
	ICALL?L	L00001
	MOVE?CB	007h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00328	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00329	gosub spi_read
	ICALL?L	L00001
	GOSUB?L	_spi_read

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00330	if (temp_byte != (data_in[0] & $80)) then
	ICALL?L	L00001
	AND?BCW	_data_in, 080h, T1
	CMPEQ?BWL	_temp_byte, T1, L00036

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00332	    data_out[0]=$50
	ICALL?L	L00001
	MOVE?CB	050h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00333	    data_out[1]=$53    
	ICALL?L	L00001
	MOVE?CB	053h, _data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00334	    num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00335	    gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00336	endif
	ICALL?L	L00001
	LABEL?L	L00036	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00337	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00339	sendData:

	LABEL?L	_sendData	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00340	pause 2
	ICALL?L	L00001
	PAUSE?C	002h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00341	gosub debounce
	ICALL?L	L00001
	GOSUB?L	_debounce

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00342	data_out[0]=Flush_tx 'flush TX_fifo buffer
	ICALL?L	L00001
	MOVE?CB	_Flush_tx, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00343	num_byte=0
	ICALL?L	L00001
	MOVE?CB	000h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00344	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00345	data_out[0]=Write_reg+Stat_us 'reset IRQ bits
	ICALL?L	L00001
	MOVE?CB	027h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00346	data_out[1]=%00110000
	ICALL?L	L00001
	MOVE?CB	030h, _data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00347	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00348	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00349	gosub setup_tx 'setup Tx
	ICALL?L	L00001
	GOSUB?L	_setup_tx

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00350	data_out[0]=Wr_tx_pload 'put 32 bytes data in Tx pload buffer
	ICALL?L	L00001
	MOVE?CB	_Wr_tx_pload, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00351	for w = 1 to payloadLength
	ICALL?L	L00001
	MOVE?CB	001h, _w
	LABEL?L	L00038	
	CMPGT?BCL	_w, _payloadLength, L00039

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00352	    data_out[w]=ser_data[w-1]
	ICALL?L	L00001
	SUB?BCW	_w, 001h, T1
	AOUT?BWB	_ser_data, T1, T1
	AIN?BBB	T1, _data_out, _w

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00353	    if data_out[w] == 10 then contSendX1
	ICALL?L	L00001
	AOUT?BBB	_data_out, _w, T1
	CMPEQ?BCL	T1, 00Ah, _contSendX1

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00354	next w
	ICALL?L	L00001
	NEXT?BCL	_w, 001h, L00038
	LABEL?L	L00039	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00355	:contSendX1

	LABEL?L	_contSendX1	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00356	num_byte=payloadLength
	ICALL?L	L00001
	MOVE?CB	_payloadLength, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00357	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00358	pauseus 500 'pause 500 us
	ICALL?L	L00001
	PAUSEUS?C	001F4h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00359	Ce=1 'CE=1 (toggle) transmit FIFO buffer
	ICALL?L	L00001
	MOVE?CT	001h, _Ce

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00360	Pauseus 500 'pause 500 us
	ICALL?L	L00001
	PAUSEUS?C	001F4h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00361	Ce=0
	ICALL?L	L00001
	MOVE?CT	000h, _Ce

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00362	Pause 10
	ICALL?L	L00001
	PAUSE?C	00Ah

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00363	trans_irq:

	LABEL?L	_trans_irq	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00364	If Irq !=0 then trans_irq 'wait until IRQ, active low
	ICALL?L	L00001
	CMPNE?TCL	_Irq, 000h, _trans_irq

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00365	data_out[0]=Stat_us 'read status register
	ICALL?L	L00001
	MOVE?CB	_Stat_us, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00366	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00367	gosub spi_read
	ICALL?L	L00001
	GOSUB?L	_spi_read

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00368	val=data_in[0]&%01110000 'mask the IRQ bits STATUS byte
	ICALL?L	L00001
	AND?BCB	_data_in, 070h, _val

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00369	if (val = Max_rt) then gosub max_retry 'maximum TX retries
	ICALL?L	L00001
	CMPNE?BCL	_val, _Max_rt, L00040
	GOSUB?L	_max_retry
	LABEL?L	L00040	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00370	if (val = Tx_inter) then gosub tx_int 'Tx interrupted
	ICALL?L	L00001
	CMPNE?BCL	_val, _Tx_inter, L00042
	GOSUB?L	_tx_int
	LABEL?L	L00042	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00371	data_out[0]=Write_reg+Stat_us
	ICALL?L	L00001
	MOVE?CB	027h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00372	data_out[1]=%00100000 'clear TX_DS IRQ bit
	ICALL?L	L00001
	MOVE?CB	020h, _data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00373	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00374	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00375	pause 2
	ICALL?L	L00001
	PAUSE?C	002h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00376	gosub debounce
	ICALL?L	L00001
	GOSUB?L	_debounce

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00377	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00380	printError:

	LABEL?L	_printError	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00381	    HSEROUT["ERROR",10]
	ICALL?L	L00001
	HSEROUT?C	045h
	HSEROUT?C	052h
	HSEROUT?C	052h
	HSEROUT?C	04Fh
	HSEROUT?C	052h
	HSEROUT?C	00Ah

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00382	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00384	printOK:

	LABEL?L	_printOK	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00385	    HSEROUT["OK",10]
	ICALL?L	L00001
	HSEROUT?C	04Fh
	HSEROUT?C	04Bh
	HSEROUT?C	00Ah

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00386	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00388	writeEeprom:

	LABEL?L	_writeEeprom	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00389	for ei = 0 to 10
	ICALL?L	L00001
	MOVE?CB	000h, _ei
	LABEL?L	L00044	
	CMPGT?BCL	_ei, 00Ah, L00045

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00390	    WRITE EEPROMPOSITION, EEPROMBYTE
	ICALL?L	L00001
	WRITEADDRESS?B	_EEPROMPOSITION
	WRITE?B	_EEPROMBYTE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00391	    READ EEPROMPOSITION, EEPROMBYTEREAD
	ICALL?L	L00001
	READADDRESS?B	_EEPROMPOSITION
	READ?B	_EEPROMBYTEREAD

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00392	    if (EEPROMBYTE == EEPROMBYTEREAD) then RETURN 
	ICALL?L	L00001
	CMPNE?BBL	_EEPROMBYTE, _EEPROMBYTEREAD, L00046
	RETURN?	
	LABEL?L	L00046	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00393	next ei
	ICALL?L	L00001
	NEXT?BCL	_ei, 001h, L00044
	LABEL?L	L00045	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00394	RETURN
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00396	debounce:

	LABEL?L	_debounce	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00397	Ce=0
	ICALL?L	L00001
	MOVE?CT	000h, _Ce

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00398	pauseus 500
	ICALL?L	L00001
	PAUSEUS?C	001F4h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00399	Ce=1
	ICALL?L	L00001
	MOVE?CT	001h, _Ce

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00400	pauseus 500
	ICALL?L	L00001
	PAUSEUS?C	001F4h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00401	Ce=0
	ICALL?L	L00001
	MOVE?CT	000h, _Ce

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00402	pauseus 500
	ICALL?L	L00001
	PAUSEUS?C	001F4h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00403	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00405	spi_write:

	LABEL?L	_spi_write	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00406	CSN=0
	ICALL?L	L00001
	MOVE?CT	000h, _CSN

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00407	For w = 0 to num_byte 'loop for # byte
	ICALL?L	L00001
	MOVE?CB	000h, _w
	LABEL?L	L00048	
	CMPGT?BBL	_w, _num_byte, L00049

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00408	SSPBUF=data_out[w] 'send array variable
	ICALL?L	L00001
	AOUT?BBB	_data_out, _w, SSPBUF

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00409	GoSub buffer_ok 'wait until buffer ready
	ICALL?L	L00001
	GOSUB?L	_buffer_ok

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00410	Next w 'next location
	ICALL?L	L00001
	NEXT?BCL	_w, 001h, L00048
	LABEL?L	L00049	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00411	CSN=1
	ICALL?L	L00001
	MOVE?CT	001h, _CSN

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00412	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00414	spi_read:

	LABEL?L	_spi_read	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00415	CSN=0
	ICALL?L	L00001
	MOVE?CT	000h, _CSN

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00416	For w = 0 to num_byte 'loop for # byte
	ICALL?L	L00001
	MOVE?CB	000h, _w
	LABEL?L	L00050	
	CMPGT?BBL	_w, _num_byte, L00051

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00417	SSPBUF = data_out[0] 'write to SSPBUF to start clock
	ICALL?L	L00001
	MOVE?BB	_data_out, SSPBUF

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00418	GoSub buffer_ok 'wait for receipt
	ICALL?L	L00001
	GOSUB?L	_buffer_ok

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00419	data_in[w] = SSPBUF 'store received character in array
	ICALL?L	L00001
	AIN?BBB	SSPBUF, _data_in, _w

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00420	Next w 'get next byte
	ICALL?L	L00001
	NEXT?BCL	_w, 001h, L00050
	LABEL?L	L00051	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00421	CSN=1
	ICALL?L	L00001
	MOVE?CT	001h, _CSN

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00422	Return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00423	buffer_ok:

	LABEL?L	_buffer_ok	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00424	IF SSPIF = 0 Then buffer_ok 'wait for SPI interupt flag
	ICALL?L	L00001
	CMPEQ?TCL	_SSPIF, 000h, _buffer_ok

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00425	SSPIF = 0 'reset flag
	ICALL?L	L00001
	MOVE?CT	000h, _SSPIF

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00426	Return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00428	max_retry:

	LABEL?L	_max_retry	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00429	data_out[0]=Flush_tx 'flush TX buffer
	ICALL?L	L00001
	MOVE?CB	_Flush_tx, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00430	num_byte=0
	ICALL?L	L00001
	MOVE?CB	000h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00431	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00432	data_out[0]=Write_reg+Stat_us
	ICALL?L	L00001
	MOVE?CB	027h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00433	data_out[1]=%00010000 'clear MAX_RT IRQ bit
	ICALL?L	L00001
	MOVE?CB	010h, _data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00434	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00435	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00436	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00438	tx_int:

	LABEL?L	_tx_int	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00439	data_out[0]=Flush_tx 'flush TX buffer
	ICALL?L	L00001
	MOVE?CB	_Flush_tx, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00440	num_byte=0
	ICALL?L	L00001
	MOVE?CB	000h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00441	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00442	data_out[0]=Write_reg+Stat_us
	ICALL?L	L00001
	MOVE?CB	027h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00443	data_out[1]=%00110000 'clear TX_DS & MAX_RT IRQ bit
	ICALL?L	L00001
	MOVE?CB	030h, _data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00444	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00445	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00446	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00448	setup_rx:

	LABEL?L	_setup_rx	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00449	data_out[0]=Write_reg+Config_nrf 'Config:PRX=1,PWR_UP=1, CRC=2, enabled
	ICALL?L	L00001
	MOVE?CB	020h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00450	data_out[1]=$0F
	ICALL?L	L00001
	MOVE?CB	00Fh, _data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00451	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00452	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00453	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00455	setup_tx:

	LABEL?L	_setup_tx	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00456	data_out[0]=Write_reg+Tx_addr 'Tx address
	ICALL?L	L00001
	MOVE?CB	030h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00457	READ 1, data_out[1]
	ICALL?L	L00001
	READADDRESS?C	001h
	READ?B	_data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00458	READ 2, data_out[2]
	ICALL?L	L00001
	READADDRESS?C	002h
	READ?B	_data_out + 00002h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00459	READ 3, data_out[3]
	ICALL?L	L00001
	READADDRESS?C	003h
	READ?B	_data_out + 00003h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00460	READ 4, data_out[4]
	ICALL?L	L00001
	READADDRESS?C	004h
	READ?B	_data_out + 00004h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00461	READ 5, data_out[5]
	ICALL?L	L00001
	READADDRESS?C	005h
	READ?B	_data_out + 00005h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00462	num_byte=5
	ICALL?L	L00001
	MOVE?CB	005h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00463	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00464	data_out[0]= Write_reg+Setup_retr 'Set retransmit @ ACK
	ICALL?L	L00001
	MOVE?CB	024h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00465	data_out[1]= 10 '3x re-transmit (default)
	ICALL?L	L00001
	MOVE?CB	00Ah, _data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00466	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00467	Gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00468	data_out[0]=Write_reg+Config_nrf 'Config:PRX=0,PWR_UP=1, CRC=2, enabled
	ICALL?L	L00001
	MOVE?CB	020h, _data_out

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00469	data_out[1]=$0E
	ICALL?L	L00001
	MOVE?CB	00Eh, _data_out + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00470	num_byte=1
	ICALL?L	L00001
	MOVE?CB	001h, _num_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00471	gosub spi_write
	ICALL?L	L00001
	GOSUB?L	_spi_write

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00472	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00474	convertInputData:

	LABEL?L	_convertInputData	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00475	    TEMP_BYTE="a"
	ICALL?L	L00001
	MOVE?CB	061h, _temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00476	    for k=0 to 2    
	ICALL?L	L00001
	MOVE?CB	000h, _k
	LABEL?L	L00052	
	CMPGT?BCL	_k, 002h, L00053

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00477	        TEMP1_BYTE = "a"
	ICALL?L	L00001
	MOVE?CB	061h, _temp1_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00478	        TEMP2_BYTE = ser_data[i]
	ICALL?L	L00001
	AOUT?BBB	_ser_data, _i, _temp2_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00479	        if (TEMP2_BYTE == "|") then return
	ICALL?L	L00001
	CMPNE?BCL	_temp2_byte, 07Ch, L00054
	RETURN?	
	LABEL?L	L00054	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00480	        GOSUB lookupChar
	ICALL?L	L00001
	GOSUB?L	_lookupChar

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00481	        if (TEMP1_BYTE == "a") then return 
	ICALL?L	L00001
	CMPNE?BCL	_temp1_byte, 061h, L00056
	RETURN?	
	LABEL?L	L00056	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00482	        if (k==0) then 
	ICALL?L	L00001
	CMPNE?BCL	_k, 000h, L00058

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00483	            TEMP_BYTE = TEMP1_BYTE 
	ICALL?L	L00001
	MOVE?BB	_temp1_byte, _temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00484	        else 
	ICALL?L	L00001
	GOTO?L	L00059
	LABEL?L	L00058	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00485	            TEMP_BYTE = TEMP_BYTE*10 + TEMP1_BYTE 
	ICALL?L	L00001
	MUL?BCW	_temp_byte, 00Ah, T1
	ADD?WBB	T1, _temp1_byte, _temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00486	        endif
	ICALL?L	L00001
	LABEL?L	L00059	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00487	        i = i + 1
	ICALL?L	L00001
	ADD?BCB	_i, 001h, _i

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00488	    next k
	ICALL?L	L00001
	NEXT?BCL	_k, 001h, L00052
	LABEL?L	L00053	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00489	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00491	lookupChar:

	LABEL?L	_lookupChar	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00492	    LOOKDOWN temp2_byte,["0123456789"], temp1_byte
	ICALL?L	L00001
	LOOKDOWN?BCLB	_temp2_byte, 00Ah, L00003, _temp1_byte
	LDRET?C	030h
	LDRET?C	031h
	LDRET?C	032h
	LDRET?C	033h
	LDRET?C	034h
	LDRET?C	035h
	LDRET?C	036h
	LDRET?C	037h
	LDRET?C	038h
	LDRET?C	039h

	LABEL?L	L00003	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00493	RETURN
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00495	saveChannel:

	LABEL?L	_saveChannel	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00496	    if (temp_byte == "a") then
	ICALL?L	L00001
	CMPNE?BCL	_temp_byte, 061h, L00060

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00497	        gosub printError
	ICALL?L	L00001
	GOSUB?L	_printError

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00498	        return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00499	    endif
	ICALL?L	L00001
	LABEL?L	L00060	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00500	    EEPROMPOSITION = 0
	ICALL?L	L00001
	MOVE?CB	000h, _EEPROMPOSITION

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00501	    EEPROMBYTE = temp_byte
	ICALL?L	L00001
	MOVE?BB	_temp_byte, _EEPROMBYTE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00502	    GOSUB writeEeprom
	ICALL?L	L00001
	GOSUB?L	_writeEeprom

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00503	    gosub printOK
	ICALL?L	L00001
	GOSUB?L	_printOK

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00504	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00506	savePwd:

	LABEL?L	_savePwd	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00507	    for k=2 to 6
	ICALL?L	L00001
	MOVE?CB	002h, _k
	LABEL?L	L00062	
	CMPGT?BCL	_k, 006h, L00063

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00508	        if (ser_data[k] == 0) then 
	ICALL?L	L00001
	AOUT?BBB	_ser_data, _k, T1
	CMPNE?BCL	T1, 000h, L00064

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00509	            GOSUB printError
	ICALL?L	L00001
	GOSUB?L	_printError

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00510	            return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00511	        endif
	ICALL?L	L00001
	LABEL?L	L00064	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00512	    next k
	ICALL?L	L00001
	NEXT?BCL	_k, 001h, L00062
	LABEL?L	L00063	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00513	    if (ser_data[7] == 0) then    
	ICALL?L	L00001
	CMPNE?BCL	_ser_data + 00007h, 000h, L00066

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00514	        for k=2 to 6
	ICALL?L	L00001
	MOVE?CB	002h, _k
	LABEL?L	L00068	
	CMPGT?BCL	_k, 006h, L00069

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00515	            EEPROMPOSITION = k-1
	ICALL?L	L00001
	SUB?BCB	_k, 001h, _EEPROMPOSITION

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00516	            EEPROMBYTE = ser_data[k]
	ICALL?L	L00001
	AOUT?BBB	_ser_data, _k, _EEPROMBYTE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00517	            GOSUB writeEeprom
	ICALL?L	L00001
	GOSUB?L	_writeEeprom

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00518	        next k
	ICALL?L	L00001
	NEXT?BCL	_k, 001h, L00068
	LABEL?L	L00069	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00519	        gosub printOK
	ICALL?L	L00001
	GOSUB?L	_printOK

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00520	    else 
	ICALL?L	L00001
	GOTO?L	L00067
	LABEL?L	L00066	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00521	        gosub printError
	ICALL?L	L00001
	GOSUB?L	_printError

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00522	    endif
	ICALL?L	L00001
	LABEL?L	L00067	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00523	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00525	addNewDevice:

	LABEL?L	_addNewDevice	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00526	read 0, TEMP_data[5]
	ICALL?L	L00001
	READADDRESS?C	000h
	READ?B	_TEMP_data + 00005h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00527	READ 1, TEMP_data[0]
	ICALL?L	L00001
	READADDRESS?C	001h
	READ?B	_TEMP_data

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00528	READ 2, TEMP_data[1]
	ICALL?L	L00001
	READADDRESS?C	002h
	READ?B	_TEMP_data + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00529	READ 3, TEMP_data[2]
	ICALL?L	L00001
	READADDRESS?C	003h
	READ?B	_TEMP_data + 00002h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00530	READ 4, TEMP_data[3]
	ICALL?L	L00001
	READADDRESS?C	004h
	READ?B	_TEMP_data + 00003h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00531	READ 5, TEMP_data[4]
	ICALL?L	L00001
	READADDRESS?C	005h
	READ?B	_TEMP_data + 00004h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00532	EEPROMPOSITION = 0
	ICALL?L	L00001
	MOVE?CB	000h, _EEPROMPOSITION

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00533	EEPROMBYTE = 40
	ICALL?L	L00001
	MOVE?CB	028h, _EEPROMBYTE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00534	GOSUB writeEeprom
	ICALL?L	L00001
	GOSUB?L	_writeEeprom

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00535	EEPROMPOSITION = 1
	ICALL?L	L00001
	MOVE?CB	001h, _EEPROMPOSITION

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00536	EEPROMBYTE = "R"
	ICALL?L	L00001
	MOVE?CB	052h, _EEPROMBYTE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00537	GOSUB writeEeprom
	ICALL?L	L00001
	GOSUB?L	_writeEeprom

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00538	EEPROMPOSITION = 2
	ICALL?L	L00001
	MOVE?CB	002h, _EEPROMPOSITION

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00539	EEPROMBYTE = "O"
	ICALL?L	L00001
	MOVE?CB	04Fh, _EEPROMBYTE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00540	GOSUB writeEeprom
	ICALL?L	L00001
	GOSUB?L	_writeEeprom

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00541	EEPROMPOSITION = 3
	ICALL?L	L00001
	MOVE?CB	003h, _EEPROMPOSITION

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00542	EEPROMBYTE = "B"
	ICALL?L	L00001
	MOVE?CB	042h, _EEPROMBYTE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00543	GOSUB writeEeprom
	ICALL?L	L00001
	GOSUB?L	_writeEeprom

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00544	EEPROMPOSITION = 4
	ICALL?L	L00001
	MOVE?CB	004h, _EEPROMPOSITION

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00545	EEPROMBYTE = "I"
	ICALL?L	L00001
	MOVE?CB	049h, _EEPROMBYTE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00546	GOSUB writeEeprom
	ICALL?L	L00001
	GOSUB?L	_writeEeprom

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00547	EEPROMPOSITION = 5
	ICALL?L	L00001
	MOVE?CB	005h, _EEPROMPOSITION

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00548	EEPROMBYTE = "K"
	ICALL?L	L00001
	MOVE?CB	04Bh, _EEPROMBYTE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00549	GOSUB writeEeprom
	ICALL?L	L00001
	GOSUB?L	_writeEeprom

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00551	ser_data[0] = 0
	ICALL?L	L00001
	MOVE?CB	000h, _ser_data

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00552	ser_data[1] = "c"
	ICALL?L	L00001
	MOVE?CB	063h, _ser_data + 00001h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00553	ser_data[2] = "="
	ICALL?L	L00001
	MOVE?CB	03Dh, _ser_data + 00002h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00554	ser_data[3] = TEMP_data[0] 'password
	ICALL?L	L00001
	MOVE?BB	_TEMP_data, _ser_data + 00003h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00555	ser_data[4] = TEMP_data[1]
	ICALL?L	L00001
	MOVE?BB	_TEMP_data + 00001h, _ser_data + 00004h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00556	ser_data[5] = TEMP_data[2]
	ICALL?L	L00001
	MOVE?BB	_TEMP_data + 00002h, _ser_data + 00005h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00557	ser_data[6] = TEMP_data[3]
	ICALL?L	L00001
	MOVE?BB	_TEMP_data + 00003h, _ser_data + 00006h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00558	ser_data[7] = TEMP_data[4]
	ICALL?L	L00001
	MOVE?BB	_TEMP_data + 00004h, _ser_data + 00007h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00559	ser_data[8] = TEMP_data[5] 'channel
	ICALL?L	L00001
	MOVE?BB	_TEMP_data + 00005h, _ser_data + 00008h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00560	ser_data[9] = temp_byte 'deviceId
	ICALL?L	L00001
	MOVE?BB	_temp_byte, _ser_data + 00009h

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00561	GOSUB commonRXTX
	ICALL?L	L00001
	GOSUB?L	_commonRXTX

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00562	gosub debounce
	ICALL?L	L00001
	GOSUB?L	_debounce

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00563	gosub sendData
	ICALL?L	L00001
	GOSUB?L	_sendData

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00564	gosub debounce
	ICALL?L	L00001
	GOSUB?L	_debounce

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00566	EEPROMPOSITION = 0
	ICALL?L	L00001
	MOVE?CB	000h, _EEPROMPOSITION

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00567	EEPROMBYTE = TEMP_data[5]
	ICALL?L	L00001
	MOVE?BB	_TEMP_data + 00005h, _EEPROMBYTE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00568	GOSUB writeEeprom
	ICALL?L	L00001
	GOSUB?L	_writeEeprom

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00569	EEPROMPOSITION = 1
	ICALL?L	L00001
	MOVE?CB	001h, _EEPROMPOSITION

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00570	EEPROMBYTE = TEMP_data[0]
	ICALL?L	L00001
	MOVE?BB	_TEMP_data, _EEPROMBYTE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00571	GOSUB writeEeprom
	ICALL?L	L00001
	GOSUB?L	_writeEeprom

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00572	EEPROMPOSITION = 2
	ICALL?L	L00001
	MOVE?CB	002h, _EEPROMPOSITION

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00573	EEPROMBYTE = TEMP_data[1]
	ICALL?L	L00001
	MOVE?BB	_TEMP_data + 00001h, _EEPROMBYTE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00574	GOSUB writeEeprom
	ICALL?L	L00001
	GOSUB?L	_writeEeprom

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00575	EEPROMPOSITION = 3
	ICALL?L	L00001
	MOVE?CB	003h, _EEPROMPOSITION

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00576	EEPROMBYTE = TEMP_data[2]
	ICALL?L	L00001
	MOVE?BB	_TEMP_data + 00002h, _EEPROMBYTE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00577	GOSUB writeEeprom
	ICALL?L	L00001
	GOSUB?L	_writeEeprom

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00578	EEPROMPOSITION = 4
	ICALL?L	L00001
	MOVE?CB	004h, _EEPROMPOSITION

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00579	EEPROMBYTE = TEMP_data[3]
	ICALL?L	L00001
	MOVE?BB	_TEMP_data + 00003h, _EEPROMBYTE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00580	GOSUB writeEeprom
	ICALL?L	L00001
	GOSUB?L	_writeEeprom

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00581	EEPROMPOSITION = 5
	ICALL?L	L00001
	MOVE?CB	005h, _EEPROMPOSITION

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00582	EEPROMBYTE = TEMP_data[4]
	ICALL?L	L00001
	MOVE?BB	_TEMP_data + 00004h, _EEPROMBYTE

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00583	GOSUB writeEeprom
	ICALL?L	L00001
	GOSUB?L	_writeEeprom

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00584	GOSUB commonRXTX
	ICALL?L	L00001
	GOSUB?L	_commonRXTX

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00585	return
	ICALL?L	L00001
	RETURN?	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00587	printConfig:

	LABEL?L	_printConfig	

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00588	    read 0, temp_byte
	ICALL?L	L00001
	READADDRESS?C	000h
	READ?B	_temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00589	    HSEROUT["+Channel:",DEC temp_byte,10]
	ICALL?L	L00001
	HSEROUT?C	02Bh
	HSEROUT?C	043h
	HSEROUT?C	068h
	HSEROUT?C	061h
	HSEROUT?C	06Eh
	HSEROUT?C	06Eh
	HSEROUT?C	065h
	HSEROUT?C	06Ch
	HSEROUT?C	03Ah
	HSEROUTCOUNT?C	000h
	HSEROUTNUM?B	_temp_byte
	HSEROUTDEC?	
	HSEROUT?C	00Ah

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00590	    HSEROUT["+Password:"]
	ICALL?L	L00001
	HSEROUT?C	02Bh
	HSEROUT?C	050h
	HSEROUT?C	061h
	HSEROUT?C	073h
	HSEROUT?C	073h
	HSEROUT?C	077h
	HSEROUT?C	06Fh
	HSEROUT?C	072h
	HSEROUT?C	064h
	HSEROUT?C	03Ah

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00591	    read 1, temp_byte
	ICALL?L	L00001
	READADDRESS?C	001h
	READ?B	_temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00592	    HSEROUT[temp_byte]
	ICALL?L	L00001
	HSEROUT?B	_temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00593	    read 2, temp_byte
	ICALL?L	L00001
	READADDRESS?C	002h
	READ?B	_temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00594	    HSEROUT[temp_byte]
	ICALL?L	L00001
	HSEROUT?B	_temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00595	    read 3, temp_byte
	ICALL?L	L00001
	READADDRESS?C	003h
	READ?B	_temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00596	    HSEROUT[temp_byte]
	ICALL?L	L00001
	HSEROUT?B	_temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00597	    read 4, temp_byte
	ICALL?L	L00001
	READADDRESS?C	004h
	READ?B	_temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00598	    HSEROUT[temp_byte]
	ICALL?L	L00001
	HSEROUT?B	_temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00599	    read 5, temp_byte
	ICALL?L	L00001
	READADDRESS?C	005h
	READ?B	_temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00600	    HSEROUT[temp_byte]
	ICALL?L	L00001
	HSEROUT?B	_temp_byte

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00601	    HSEROUT[10]
	ICALL?L	L00001
	HSEROUT?C	00Ah

; C:\REMOTE~1\PRIVATE\HARDWARE\MICROC~1\USBSTI~2.PBP	00602	return
	ICALL?L	L00001
	RETURN?	

	END
