<div>
<script>
function updateStatusCOMPONENTID() {
    updateStatusCOMPONENTID(true);
}
function updateStatusCOMPONENTID(showError) {
  $.ajax({
      url: "/",
      type: "get",
      'cache' : false,
      data: "ServiceName=GetJsonObject&deviceId=COMPONENTID",
      success: function(indata) {
          if (indata.indexOf("<!--LOGIN-->") > 0) { location.replace("/"); return; }
          var data = JSON.parse(indata);
          updateComponentsCOMPONENTID(data);
      },
      error:function(xhr) {
          if (showError) {
                alert(error_get_device_status+"\n\n"+xhr.responseText);
          }
      }
  });
}
function updateComponentsCOMPONENTID(data) {
          document.getElementById("nameCOMPONENTID").innerHTML=data.deviceName;
          document.getElementById("nameFormCOMPONENTID").value = data.deviceName;
          document.getElementById("roomCOMPONENTID").innerHTML=data.roomName;
          document.getElementById("roomFormCOMPONENTID").value=data.roomName;
          document.getElementById("compIdCOMPONENTID").innerHTML=data.deviceId;
          if (data.relayOn) {
               document.getElementById("stateCOMPONENTID").innerHTML=on;
               document.getElementById("titleOfAccordionEndCOMPONENTID").innerHTML=on;
               document.getElementById("titleOfAccordionStartCOMPONENTID").setAttribute('class', 'ui-icon ui-icon-power');
          } else {
               document.getElementById("stateCOMPONENTID").innerHTML=off;
               document.getElementById("titleOfAccordionEndCOMPONENTID").innerHTML=off;
               document.getElementById("titleOfAccordionStartCOMPONENTID").setAttribute('class', '');
          }
          if (data.powerLost) {
              document.getElementById("powerLostCOMPONENTID").innerHTML=yes;
              document.getElementById("titleOfAccordionEndCOMPONENTID").innerHTML=powerLost;
          } else {
              document.getElementById("powerLostCOMPONENTID").innerHTML=no;
          }
          if (data.enableLowBattOrPowerLostReporting) {
              document.getElementById("powerLostReportCOMPONENTID").innerHTML=yes;
              $( "#checkboxLostPowerReportingCOMPONENTID" ).prop('checked', true);
          } else {
              document.getElementById("powerLostReportCOMPONENTID").innerHTML=no;
              $( "#checkboxLostPowerReportingCOMPONENTID" ).prop('checked', false);
          }
          $("#checkboxLostPowerReportingCOMPONENTID").trigger("change");
          document.getElementById("expTemperatureCOMPONENTID").innerHTML=data.deviceExpectedTemperature;
          document.getElementById("expTemperatureFormCOMPONENTID").value=data.deviceExpectedTemperature;
          document.getElementById("temperatureCOMPONENTID").innerHTML=data.temperature;
          document.getElementById("titleOfAccordionEndCOMPONENTID").innerHTML=data.temperature+"&nbsp;"+deg_celsius;
          document.getElementById("thresholdCOMPONENTID").innerHTML=data.threshold;
          document.getElementById("thresholdFormCOMPONENTID").value=data.threshold;
          document.getElementById("heatingControllerCOMPONENTID").innerHTML=data.heatingControllerDeviceId;
          document.getElementById("heatingControllerFormCOMPONENTID").value=data.heatingControllerDeviceId;
          document.getElementById("heatingControllerSubCOMPONENTID").innerHTML=data.heatingControllerSubDeviceId;
          document.getElementById("heatingControllerSubFormCOMPONENTID").value=data.heatingControllerSubDeviceId;
          document.getElementById("manualSetupHourCounterCOMPONENTID").innerHTML=data.manualSetupHourCounter;
          document.getElementById("timestampCOMPONENTID").innerHTML=new Date(data.timestamp).europeDate();
          if (data.enabledScheduler) {
                $( "#checkboxEnabledSchedulerCOMPONENTID" ).prop('checked', true);
                document.getElementById("enabledSchedulerCOMPONENTID").innerHTML=yes;
          } else {
                $( "#checkboxEnabledSchedulerCOMPONENTID" ).prop('checked', false);
                document.getElementById("enabledSchedulerCOMPONENTID").innerHTML=no;
          }
          $("#checkboxEnabledSchedulerCOMPONENTID").trigger("change");
}
$(function() {
    $("#manualSetupFormCOMPONENTID").submit(function (event) {
                event.preventDefault();
                    var values = $(this).serialize();
                    $.ajax({
                        url: "/",
                        'cache': false,
                        type: "get",
                        data: values,
                        success: function (data) {
                            if (data.indexOf("<!--LOGIN-->") > 0) { location.replace("/"); }
                            alert(operation_ok);
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            if (xhr.responseText == "error_no_permission") {
                                alert(error_no_permission);
                            } else {
                                alert(xhr.responseText);
                            }
                        }
                    });
    });
    $( "#manualSetupButtCOMPONENTID" ).button();
    $( "#componentTabsCOMPONENTID" ).tabs({
        activate: function(event, ui){
            if (ui.newTab.index() == 3) {
                drawChart($( "#chartAreaCOMPONENTID" ), COMPONENTID, "hour", "DOUBLELINEDATA");
            }
        }
    });
    $( "#actionTabsCOMPONENTID").tabs({
        activate: function(event, ui){
            if (ui.newTab.index() == 0) {
                document.getElementById('manSetupTemperatureCOMPONENTID').innerHTML = populateTempOptions();
                document.getElementById('manSetupHourDurationCOMPONENTID').innerHTML = populateHourOptions();
                document.getElementById("allCOMPONENTID").value = "false";
            } else if (ui.newTab.index() == 1) {
                document.getElementById('manSetupTemperatureCOMPONENTID').innerHTML = populateTempOptions();
                document.getElementById('manSetupHourDurationCOMPONENTID').innerHTML = populateHourOptions();
                document.getElementById("allCOMPONENTID").value = "true";
            }
        }
    });
    $( "#chartButtHourCOMPONENTID" ).button().click(function() {
        drawChart($( "#chartAreaCOMPONENTID" ), COMPONENTID, "hour", "DOUBLELINEDATA");
    });
    $( "#chartButtDayCOMPONENTID" ).button().click(function() {
        drawChart($( "#chartAreaCOMPONENTID" ), COMPONENTID, "day", "DOUBLELINEDATA");
    });
    $( "#chartButtWeekCOMPONENTID" ).button().click(function() {
        drawChart($( "#chartAreaCOMPONENTID" ), COMPONENTID, "week", "DOUBLELINEDATA");
    });
    $( "#chartButtMonthCOMPONENTID" ).button().click(function() {
        drawChart($( "#chartAreaCOMPONENTID" ), COMPONENTID, "month", "DOUBLELINEDATA");
    });
    $( "#chartButt3MonthCOMPONENTID" ).button().click(function() {
        drawChart($( "#chartAreaCOMPONENTID" ), COMPONENTID, "threemonth", "DOUBLELINEDATA");
    });
    $( "#chartButtYearCOMPONENTID" ).button().click(function() {
        drawChart($( "#chartAreaCOMPONENTID" ), COMPONENTID, "year", "DOUBLELINEDATA");
    });
    $( "#chartButt3YearsCOMPONENTID" ).button().click(function() {
        drawChart($( "#chartAreaCOMPONENTID" ), COMPONENTID, "threeyears", "DOUBLELINEDATA");
    });
    $( "#roomFormCOMPONENTID" ).autocomplete({minLength: 0,source: rooms}).
                   focus(function() {
                   setTimeout( "if ($('#roomFormCOMPONENTID').val().length == 0) $('#roomFormCOMPONENTID').autocomplete(\"search\", \"\"); ",1);
              });
    $( "#chartButtClearCOMPONENTID" ).button().click(function() {
      $.ajax({
      url: "/",
      type: "get",
      'cache' : false,
      data: "ServiceName=GetHistoryDataJson&deviceId=COMPONENTID&clear=true",
            success: function(indata) {
                if (indata.indexOf("<!--LOGIN-->") > 0) { location.replace("/"); return; }
                drawChart($( "#chartAreaCOMPONENTID" ), COMPONENTID, "hour", "DOUBLELINEDATA");
                alert(clear_history_data_ok);
            },
            error:function(xhr, ajaxOptions, thrownError) {
                var d = xhr.responseText;
                if (d == "error_no_permission") {
                   alert(error_no_permission);
                } else {
                    alert(xhr.responseText);
                }
            }   
          });
    });    
    $( "#RefreshStatusCOMPONENTID" ).button().click(function() {
          updateStatusCOMPONENTID();
    });
    document.getElementById('RefreshStatusCOMPONENTID').value = refresh_p;
    $( "#checkboxEnabledSchedulerCOMPONENTID" ).button({icons: {primary: "ui-icon-circle-close"}});
    $( "#checkboxEnabledSchedulerCOMPONENTID" ).change(function () {
                if (this.checked) {
                    $(this).button("option", "icons", {primary: "ui-icon-circle-check"})
                } else {
                    $(this).button("option", "icons", {primary: "ui-icon-circle-close"})
                }
            });
    $( "#checkboxEnabledSchedulerCOMPONENTID" ).filter(":checked").button({icons: {primary: "ui-icon-circle-check"} });
    $( "#checkboxLostPowerReportingCOMPONENTID" ).button({icons: {primary: "ui-icon-circle-close"}});
    $( "#checkboxLostPowerReportingCOMPONENTID" ).change(function () {
                if (this.checked) {
                    $(this).button("option", "icons", {primary: "ui-icon-circle-check"})
                } else {
                    $(this).button("option", "icons", {primary: "ui-icon-circle-close"})
                }
            });
    $( "#checkboxLostPowerReportingCOMPONENTID" ).filter(":checked").button({icons: {primary: "ui-icon-circle-check"} });
    $( "#configureCOMPONENTID" ).button().click(function() {
          var nm = document.getElementById("nameFormCOMPONENTID").value;
          if (nm == '') {
                alert(error_name_cannot_be_empty);
                return;
          }
          var thr = parseInt(document.getElementById("thresholdFormCOMPONENTID").value);
          if (isNaN(thr)) {
              alert(error_threshold_empty);
              return;
          }
          if ((thr > 10) || (thr < 0)) {
              alert(error_threshold_range);
              return;
          }
          var temp = parseFloat(document.getElementById("expTemperatureFormCOMPONENTID").value);
          if (isNaN(temp)) {
              alert(error_temperature_number);
              return;
          }
          temp = temp * 10;
          if ((temp > 400) || (temp < 0)) {
              alert(error_temperature_range);
              return;
          }
          var heatingId = parseInt(document.getElementById("heatingControllerFormCOMPONENTID").value);
          if (isNaN(heatingId)) {
              alert(error_heating_id_number);
              return;
          }
          var heatingSubId = parseInt(document.getElementById("heatingControllerSubFormCOMPONENTID").value);
          if (isNaN(heatingSubId)) {
              alert(error_heating_id_number);
              return;
          }
          var room = document.getElementById("roomFormCOMPONENTID").value;
          if (room == '') {
              alert(error_room_exist);
              return;
          }
          var plr = document.getElementById("checkboxLostPowerReportingCOMPONENTID").checked?"TRUE":"FALSE";
          var schenabled = document.getElementById("checkboxEnabledSchedulerCOMPONENTID").checked?"TRUE":"FALSE";
          $.ajax({
              url: "/",
              type: "get",
              'cache' : false,
              data: "ServiceName=ThermostatDeviceManager&deviceId=COMPONENTID&thr="+thr+"&room="+encodeURIComponent(room)+"&heatingId="+heatingId+"&plr="+plr+"&heatingSubId="+heatingSubId+"&schenabled="+schenabled+"&temp="+temp+"&nm="+encodeURIComponent(nm)+"&action=CONFIGURE",
            success: function(data) {
                if (data == "REFRESH") document.location.reload(true);
                updateStatusCOMPONENTID();
            },
            error:function(xhr, ajaxOptions, thrownError) {
                        var d = xhr.responseText;
                        if (d == "error_no_permission") {
                            alert(error_no_permission);
                        } else {
                            alert(xhr.responseText);
                        }
            }   
          });
    });
    $( "#schDialogCOMPONENTID" ).dialog({      
            autoOpen: false,
            height: 420,
            width: 940,
            modal: true,
            buttons: [
                { text: sch_button_assign_schedule, click: function() {
                  var schData="&0="+saveTempSchedule("schTempTableCOMPONENTID", 0)+"&1="+saveTempSchedule("schTempTableCOMPONENTID", 1)+"&2="+saveTempSchedule("schTempTableCOMPONENTID", 2)+"&3="+saveTempSchedule("schTempTableCOMPONENTID", 3)+"&4="+saveTempSchedule("schTempTableCOMPONENTID", 4)+"&5="+saveTempSchedule("schTempTableCOMPONENTID", 5)+"&6="+saveTempSchedule("schTempTableCOMPONENTID", 6)+"&7="+saveTempSchedule("schTempTableCOMPONENTID", 7)+"&8="+saveTempSchedule("schTempTableCOMPONENTID", 8)+"&9="+saveTempSchedule("schTempTableCOMPONENTID", 9)+"&10="+saveTempSchedule("schTempTableCOMPONENTID", 10)+"&11="+saveTempSchedule("schTempTableCOMPONENTID", 11)+"&12="+saveTempSchedule("schTempTableCOMPONENTID", 12)+"&13="+saveTempSchedule("schTempTableCOMPONENTID", 13);
                  var all=document.getElementById("allCOMPONENTID").value;
                    $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=ThermostatDeviceManager&deviceId=COMPONENTID"+schData+"&action=SAVESCH&"+"&all="+all+"&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                    },
                    error:function(xhr, ajaxOptions, thrownError) {
                        var d = xhr.responseText;
                        if (d == "error_no_permission") {
                            alert(error_no_permission);
                        } else {
                            alert(xhr.responseText);
                        }
                    }   
                  });
                  $( this ).dialog( "close" );
                }},
                { text: sch_button_cancel, click: function() {
                      $( this ).dialog( "close" );        
                }}
          ]
    });
    $( "#scheduleButtCOMPONENTID" ).button().click(function() {
          $( "#schDialogInnerCOMPONENTID" ).replaceWith(createTempSchTable('schTempTableCOMPONENTID'));        
          $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=ThermostatDeviceManager&deviceId=COMPONENTID&action=LOADSCH&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                        loadTempSchedule(data, 'schTempTableCOMPONENTID');
                        $( "#schDialogCOMPONENTID" ).dialog( "open" );          
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        alert(thrownError+"\n\n"+xhr.responseText);
                    }   
          });
          $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=SchedulersManager&type=Temperature&action=LOAD&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                        loadPrograms(data, 'temperatureProgsschTempTableCOMPONENTID');
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        alert(thrownError+"\n\n"+xhr.responseText);
                    }   
          });
          $( "#temperatureProgsSaveschTempTableCOMPONENTID" ).button({ icons: { primary: "ui-icon-disk" }, text: false }).unbind('click').click(function() {
                  var name = document.getElementById("temperatureProgsNameschTempTableCOMPONENTID").value;
                  if (name == '') {
                        alert(error_name_prog_empty);
                        return;
                  }
                  var schData="&0="+saveTempSchedule("schTempTableCOMPONENTID", 0)+"&1="+saveTempSchedule("schTempTableCOMPONENTID", 1)+"&2="+saveTempSchedule("schTempTableCOMPONENTID", 2)+"&3="+saveTempSchedule("schTempTableCOMPONENTID", 3)+"&4="+saveTempSchedule("schTempTableCOMPONENTID", 4)+"&5="+saveTempSchedule("schTempTableCOMPONENTID", 5)+"&6="+saveTempSchedule("schTempTableCOMPONENTID", 6)+"&7="+saveTempSchedule("schTempTableCOMPONENTID", 7)+"&8="+saveTempSchedule("schTempTableCOMPONENTID", 8)+"&9="+saveTempSchedule("schTempTableCOMPONENTID", 9)+"&10="+saveTempSchedule("schTempTableCOMPONENTID", 10)+"&11="+saveTempSchedule("schTempTableCOMPONENTID", 11)+"&12="+saveTempSchedule("schTempTableCOMPONENTID", 12)+"&13="+saveTempSchedule("schTempTableCOMPONENTID", 13);
                  schData += "&name=" + name;
                  $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=SchedulersManager"+schData+"&action=SAVE&type=Temperature&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                        $('#temperatureProgsschTempTableCOMPONENTID').append('<option value="'+name+'">'+name+'</option>');
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        var d = xhr.responseText;
                        if (d == "error_no_permission") {
                            alert(error_no_permission);
                        } else {
                            alert(xhr.responseText);
                        }
                    }   
                  });
          });
          $( "#temperatureProgsUpdateschTempTableCOMPONENTID" ).button({ icons: { primary: "ui-icon-disk" }, text: false }).unbind('click').click(function() {
                  var name = $("#temperatureProgsschTempTableCOMPONENTID option:selected").val();
                  var schData="&0="+saveTempSchedule("schTempTableCOMPONENTID", 0)+"&1="+saveTempSchedule("schTempTableCOMPONENTID", 1)+"&2="+saveTempSchedule("schTempTableCOMPONENTID", 2)+"&3="+saveTempSchedule("schTempTableCOMPONENTID", 3)+"&4="+saveTempSchedule("schTempTableCOMPONENTID", 4)+"&5="+saveTempSchedule("schTempTableCOMPONENTID", 5)+"&6="+saveTempSchedule("schTempTableCOMPONENTID", 6)+"&7="+saveTempSchedule("schTempTableCOMPONENTID", 7)+"&8="+saveTempSchedule("schTempTableCOMPONENTID", 8)+"&9="+saveTempSchedule("schTempTableCOMPONENTID", 9)+"&10="+saveTempSchedule("schTempTableCOMPONENTID", 10)+"&11="+saveTempSchedule("schTempTableCOMPONENTID", 11)+"&12="+saveTempSchedule("schTempTableCOMPONENTID", 12)+"&13="+saveTempSchedule("schTempTableCOMPONENTID", 13);
                  schData += "&name=" + name;
                  $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=SchedulersManager"+schData+"&action=UPDATE&type=Temperature&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        var d = xhr.responseText;
                        if (d == "error_no_permission") {
                            alert(error_no_permission);
                        } else {
                            alert(xhr.responseText);
                        }
                    }   
                  });
          });
          $( "#temperatureProgsDeleteschTempTableCOMPONENTID" ).button({ icons: { primary: "ui-icon-closethick" }, text: false }).unbind('click').click(function() {
                var name = $("#temperatureProgsschTempTableCOMPONENTID option:selected").val();
                  $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=SchedulersManager&name="+name+"&action=DELETE&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                        $("#temperatureProgsschTempTableCOMPONENTID option:selected").remove();
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        var d = xhr.responseText;
                        if (d == "error_no_permission") {
                            alert(error_no_permission);
                        } else {
                            alert(xhr.responseText);
                        }
                    }   
                  });
          });
          $( "#temperatureProgsLoadschTempTableCOMPONENTID" ).button({ icons: { primary: "ui-icon-arrowthick-1-n" }, text: false }).unbind('click').click(function() {
                var name = $("#temperatureProgsschTempTableCOMPONENTID option:selected").val();
                  $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=SchedulersManager&name="+name+"&action=GET&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                        loadTempSchedule(data, 'schTempTableCOMPONENTID');                        
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        alert(thrownError+"\n\n"+xhr.responseText);
                    }   
                  });
          });
    });
});
$(document).ready(function () {
    document.getElementById('manSetupTemperatureCOMPONENTID').innerHTML = populateTempOptions();
    document.getElementById('manSetupHourDurationCOMPONENTID').innerHTML = populateHourOptions();
    document.getElementById('configureCOMPONENTID').value = change_config_p;
    document.getElementById('manualSetupButtCOMPONENTID').value = change_config_p;
    setLabelBasedOnId("actionsCOMPONENTID", "actions");
    setLabelBasedOnId("statusCOMPONENTID", "status");
    setLabelBasedOnId("configurationCOMPONENTID", "configuration");
    setLabelBasedOnId("graphsCOMPONENTID", "graphs");
    setLabelBasedOnId("schedulerCOMPONENTID", "scheduler");
    setLabelBasedOnId("nameLabelCOMPONENTID", "name");
    setLabelBasedOnId("nameFCOMPONENTID", "name");
    setLabelBasedOnId("property_1COMPONENTID", "property");
    setLabelBasedOnId("value_1COMPONENTID", "value");
    setLabelBasedOnId("property_2COMPONENTID", "property");
    setLabelBasedOnId("value_2COMPONENTID", "value");
    setLabelBasedOnId("property_3COMPONENTID", "property");
    setLabelBasedOnId("value_3COMPONENTID", "value");
    setLabelBasedOnId("property_4COMPONENTID", "property");
    setLabelBasedOnId("value_4COMPONENTID", "value");
    setLabelBasedOnId("temperatureLCOMPONENTID", "temperature");
    setLabelBasedOnId("degCelsius1COMPONENTID", "deg_celsius");
    setLabelBasedOnId("degCelsius2COMPONENTID", "deg_celsius");
    setLabelBasedOnId("degCelsius3COMPONENTID", "deg_celsius");
    setLabelBasedOnId("stateLCOMPONENTID", "state");
    setLabelBasedOnId("scheduler_enabledCOMPONENTID", "scheduler_enabled");
    setLabelBasedOnId("scheduler_enabledFCOMPONENTID", "scheduler_enabled");
    setLabelBasedOnId("component_idCOMPONENTID", "component_id");
    setLabelBasedOnId("expected_temperatureLCOMPONENTID", "expected_temperature");
    setLabelBasedOnId("expected_temperatureFCOMPONENTID", "expected_temperature");
    setLabelBasedOnId("thresholdLCOMPONENTID", "threshold");
    setLabelBasedOnId("thresholdFCOMPONENTID", "threshold");
    setLabelBasedOnId("heating_controller_idCOMPONENTID", "heating_controller_id");
    setLabelBasedOnId("heating_controller_idFCOMPONENTID", "heating_controller_id");
    setLabelBasedOnId("heating_controllerSub_idCOMPONENTID", "heating_controllerSub_id");
    setLabelBasedOnId("heating_controllerSub_idFCOMPONENTID", "heating_controllerSub_id");
    setLabelBasedOnId("room_nameCOMPONENTID", "room_name");
    setLabelBasedOnId("room_nameFCOMPONENTID", "room_name");
    setLabelBasedOnId("last_update_timestampCOMPONENTID", "last_update_timestamp");
    setLabelBasedOnId("chartButtHourLabelCOMPONENTID", "chart_butt_hour");
    setLabelBasedOnId("chartButtDayLabelCOMPONENTID", "chart_butt_day");
    setLabelBasedOnId("chartButtWeekLabelCOMPONENTID", "chart_butt_week");
    setLabelBasedOnId("chartButtMonthLabelCOMPONENTID", "chart_butt_month");
    setLabelBasedOnId("chartButt3MonthLabelCOMPONENTID", "chart_butt_3month");
    setLabelBasedOnId("chartButtYearLabelCOMPONENTID", "chart_butt_year");
    setLabelBasedOnId("chartButt3YearsLabelCOMPONENTID", "chart_butt_3years");
    setLabelBasedOnId("chartButtClearLabelCOMPONENTID", "chart_butt_clear");
    setLabelBasedOnId("singleActionCOMPONENTID", "single_action");
    setLabelBasedOnId("allActionCOMPONENTID", "all_action");
    setLabelBasedOnId("manSetupDurationLblCOMPONENTID", "man_setup_duration");
    setLabelBasedOnId("temperatureManualLblCOMPONENTID", "temperature");
    setLabelBasedOnId("manSetuplblCOMPONENTID", "manual_setup_lbl");
    setLabelBasedOnId("manualSetupHourCounterLCOMPONENTID", "manual_setup_hour_counter_lbl");
    setLabelBasedOnId("powerLost_LabelCOMPONENTID", "power_lost_label");
    setLabelBasedOnId("powerLostReport_LabelCOMPONENTID", "power_lost_report_label");
    setLabelBasedOnId("powerLostReport_LabelFCOMPONENTID", "power_lost_report_label");
    updateStatusCOMPONENTID(false);
});
</script>
  <div id="componentTabsCOMPONENTID">
     <ul>
        <li><a href="#componentTabsCOMPONENTID-1"><div id="actionsCOMPONENTID"></div></a></li>
        <li><a href="#componentTabsCOMPONENTID-2"><div id="statusCOMPONENTID"></div></a></li>
        <li><a href="#componentTabsCOMPONENTID-3"><div id="configurationCOMPONENTID"></div></a></li>
        <li><a href="#componentTabsCOMPONENTID-4"><div id="graphsCOMPONENTID"></div></a></li>
    </ul>
    <div id="componentTabsCOMPONENTID-1">
        <div id="actionTabsCOMPONENTID">
             <ul>
                <li><a href="#actionTabsCOMPONENTID-1"><div id="singleActionCOMPONENTID"></div></a></li>
                <li><a href="#actionTabsCOMPONENTID-1"><div id="allActionCOMPONENTID"></div></a></li>
             </ul>
             <div id="actionTabsCOMPONENTID-1">
                <button id="scheduleButtCOMPONENTID"><div id="schedulerCOMPONENTID"></div></button>
                <br/>
                <br/>
                <form id="manualSetupFormCOMPONENTID">
                <table><caption class="ui-widget-header"><span id="manSetuplblCOMPONENTID"></span></caption><tr class="ui-widget-content">
                    <td><span id="temperatureManualLblCOMPONENTID"></span></td>
                    <td><select id="manSetupTemperatureCOMPONENTID" name="manSetupTemperature"></select></td>
                    <td>&nbsp;&nbsp;</td>
                    <td><span id="manSetupDurationLblCOMPONENTID"></span></td>
                    <td><select id="manSetupHourDurationCOMPONENTID" name="manSetupHourDuration"></select></td>
                    <td><input type="submit" id="manualSetupButtCOMPONENTID"/></td>
                </tr></table>
                <input type="hidden" name="ServiceName" value="ThermostatDeviceManager"/>
                <input type="hidden" name="deviceId" value="COMPONENTID"/>
                <input type="hidden" name="action" value="setmanduration"/>
                <input type="hidden" id="allCOMPONENTID" name="all" value="false"/>
                </form>
             </div>
        </div>
    </div>
    <div id="componentTabsCOMPONENTID-2">
        <table>
          <tr><td>
            <table class="ui-widget" style="border-collapse: collapse;" width="100%">
              <thead class="ui-widget-header">
                <tr>
                <th><div id="property_1COMPONENTID"></div></th>
                <th><div id="value_1COMPONENTID"></div></th>
                </tr>
              </thead>
              <tbody class="ui-widget-content">
                <tr><td><div id="nameLabelCOMPONENTID"></div></td><td><span id='nameCOMPONENTID'></span></td></tr>
                <tr><td><div id="component_idCOMPONENTID"></div></td><td><span id='compIdCOMPONENTID'></span></td></tr>
                <tr><td><div id="room_nameCOMPONENTID"></div></td><td><span id='roomCOMPONENTID'></span></td></tr>
                <tr><td><div id="stateLCOMPONENTID"></div></td><td><span id='stateCOMPONENTID'></span></td></tr>
                <tr><td><div id="heating_controller_idCOMPONENTID"></div></td><td><span id='heatingControllerCOMPONENTID'></span></td></tr>
                <tr><td><div id="heating_controllerSub_idCOMPONENTID"></div></td><td><span id='heatingControllerSubCOMPONENTID'></span></td></tr>
                <tr><td><div id="scheduler_enabledCOMPONENTID"></div></td><td><span id='enabledSchedulerCOMPONENTID'></span></td></tr>
              </tbody>
            </table>
          </td><td>
            <table class="ui-widget" style="border-collapse: collapse;" width="100%">
              <thead class="ui-widget-header">
                <tr>
                <th><div id="property_2COMPONENTID"></div></th>
                <th><div id="value_2COMPONENTID"></div></th>
                </tr>
              </thead>
              <tbody class="ui-widget-content">
                <tr><td><div id="temperatureLCOMPONENTID"></div></td><td><span id='temperatureCOMPONENTID'></span>&nbsp;<span id="degCelsius1COMPONENTID"></span></td></tr>
                <tr><td><div id="expected_temperatureLCOMPONENTID"></div></td><td><span id='expTemperatureCOMPONENTID'></span>&nbsp;<span id="degCelsius2COMPONENTID"></span></td></tr>
                <tr><td><div id="thresholdLCOMPONENTID"></div></td><td>0.<span id='thresholdCOMPONENTID'></span>&nbsp;<span id="degCelsius3COMPONENTID"></span></td></tr>
                <tr><td><div id="manualSetupHourCounterLCOMPONENTID"></div></td><td><span id='manualSetupHourCounterCOMPONENTID'></span>&nbsp;min.</td></tr>
                <tr><td><div id="powerLost_LabelCOMPONENTID"></div></td><td><span id='powerLostCOMPONENTID'></span></td></tr>
                <tr><td><div id="powerLostReport_LabelCOMPONENTID"></div></td><td><span id='powerLostReportCOMPONENTID'></span></td></tr>
                <tr><td><div id="last_update_timestampCOMPONENTID"></div></td><td><span id='timestampCOMPONENTID'></span></td></tr>
              </tbody>
            </table>
          </td></tr>
        </table>
        <input type="submit" id="RefreshStatusCOMPONENTID"/>
    </div>
    <div id="componentTabsCOMPONENTID-3">
        <table>
          <tr><td>
            <table class="ui-widget" style="border-collapse: collapse;" width="100%">
              <thead class="ui-widget-header">
                <tr>
                <th><div id="property_3COMPONENTID"></div></th>
                <th><div id="value_3COMPONENTID"></div></th>
                </tr>
              </thead>
              <tbody class="ui-widget-content">
                <tr><td><div id="nameFCOMPONENTID"></div></td><td><input type="text" id="nameFormCOMPONENTID" /></td></tr>
                <tr><td><div id="room_nameFCOMPONENTID"></div></td><td><input type="text" id="roomFormCOMPONENTID"/></td></tr>
                <tr><td><div id="expected_temperatureFCOMPONENTID"></div></td><td><input type="text" id="expTemperatureFormCOMPONENTID" /></td></tr>
                <tr><td><div id="thresholdFCOMPONENTID"></div></td><td><input type="text" id="thresholdFormCOMPONENTID" /></td></tr>
              </tbody>
            </table>
          </td><td>
            <table class="ui-widget" style="border-collapse: collapse;" width="100%">
              <thead class="ui-widget-header">
                <tr>
                <th><div id="property_4COMPONENTID"></div></th>
                <th><div id="value_4COMPONENTID"></div></th>
                </tr>
              </thead>
              <tbody class="ui-widget-content">
                <tr><td><div id="heating_controller_idFCOMPONENTID"></div></td><td><input type="text" id="heatingControllerFormCOMPONENTID" /></td></tr>
                <tr><td><div id="heating_controllerSub_idFCOMPONENTID"></div></td><td><input type="text" id="heatingControllerSubFormCOMPONENTID" /></td></tr>
                <tr><td><div id="powerLostReport_LabelFCOMPONENTID"></div></td><td><input type="checkbox" id="checkboxLostPowerReportingCOMPONENTID" /><label for="checkboxLostPowerReportingCOMPONENTID">&nbsp;</label></td></tr>
                <tr><td><div id="scheduler_enabledFCOMPONENTID"></div></td><td><input type="checkbox" id="checkboxEnabledSchedulerCOMPONENTID" /><label for="checkboxEnabledSchedulerCOMPONENTID">&nbsp;</label></td></tr>                
              </tbody>
            </table>
          </td></tr>
        </table>
        <input type="submit" id="configureCOMPONENTID"/>        
    </div>
    <div id="componentTabsCOMPONENTID-4">
        <button id="chartButtHourCOMPONENTID"><div id="chartButtHourLabelCOMPONENTID"></div></button>
        <button id="chartButtDayCOMPONENTID"><div id="chartButtDayLabelCOMPONENTID"></div></button>
        <button id="chartButtWeekCOMPONENTID"><div id="chartButtWeekLabelCOMPONENTID"></div></button>
        <button id="chartButtMonthCOMPONENTID"><div id="chartButtMonthLabelCOMPONENTID"></div></button>
        <button id="chartButt3MonthCOMPONENTID"><div id="chartButt3MonthLabelCOMPONENTID"></div></button>
        <button id="chartButtYearCOMPONENTID"><div id="chartButtYearLabelCOMPONENTID"></div></button>
        <button id="chartButt3YearsCOMPONENTID"><div id="chartButt3YearsLabelCOMPONENTID"></div></button>
        <button id="chartButtClearCOMPONENTID"><div id="chartButtClearLabelCOMPONENTID"></div></button><BR/><BR/>
        <div id="chartAreaCOMPONENTID" style="width:800px;height:300px;display:inline-block">
        </div>
    </div>
  </div>
<div id="schDialogCOMPONENTID">
    <div id="schDialogInnerCOMPONENTID">
    </div>
</div>
</div>