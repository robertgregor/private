<div>
<script>
function updateStatusCOMPONENTID() {
    updateStatusCOMPONENTID(true);
}
function updateStatusCOMPONENTID(showError) {
  $.ajax({
      url: "/",
      type: "get",
      'cache' : false,
      data: "ServiceName=GetJsonObject&deviceId=COMPONENTID&"+Math.floor((Math.random()*100)+1),
      success: function(indata) {
          var data = JSON.parse(indata);
          document.getElementById("nameCOMPONENTID").innerHTML=data.deviceName;
          document.getElementById("nameFormCOMPONENTID").value = data.deviceName;
          if (data.currentState) {
              document.getElementById("statusCOMPONENTID").innerHTML='ON';
          } else {
              document.getElementById("statusCOMPONENTID").innerHTML='OFF';
          }
          document.getElementById("compIdCOMPONENTID").innerHTML=data.deviceId;
          if (data.onWhenAppliedPower) {
                $( "#checkboxOnWhenPowerCOMPONENTID" ).prop('checked', true);
                document.getElementById("onWhenPowerCOMPONENTID").innerHTML='YES';
          } else {
                $( "#checkboxOnWhenPowerCOMPONENTID" ).prop('checked', false);
                document.getElementById("onWhenPowerCOMPONENTID").innerHTML='NO';
          }
          $("#checkboxOnWhenPowerCOMPONENTID").trigger("change");
          document.getElementById("configuredPeriodCOMPONENTID").innerHTML=data.configuredPeriod;
          document.getElementById("offPeriodFormCOMPONENTID").value = data.configuredPeriod;
          document.getElementById("currentPeriodCOMPONENTID").innerHTML=data.currentCounter;
          document.getElementById("timestampCOMPONENTID").innerHTML=new Date(data.timestamp).europeDate();
          if (data.enabledScheduler) {
                $( "#checkboxEnabledSchedulerCOMPONENTID" ).prop('checked', true);
                document.getElementById("enabledSchedulerCOMPONENTID").innerHTML='YES';
          } else {
                $( "#checkboxEnabledSchedulerCOMPONENTID" ).prop('checked', false);
                document.getElementById("enabledSchedulerCOMPONENTID").innerHTML='NO';
          }
          $("#checkboxEnabledSchedulerCOMPONENTID").trigger("change");
      },
      error:function(){
        if (showError) {
             alert('Error when tried to get the status of the device.');
        }
      }   
  });
}
$(function() {
    $( "#checkboxOnWhenPowerCOMPONENTID" ).button({icons: {primary: "ui-icon-circle-close"}});
    $( "#checkboxOnWhenPowerCOMPONENTID" ).change(function () {
                if (this.checked) {
                    $(this).button("option", "icons", {primary: "ui-icon-circle-check"})
                } else {
                    $(this).button("option", "icons", {primary: "ui-icon-circle-close"})
                }
            });
    $( "#checkboxOnWhenPowerCOMPONENTID" ).filter(":checked").button({icons: {primary: "ui-icon-circle-check"} });
    $( "#checkboxEnabledSchedulerCOMPONENTID" ).button({icons: {primary: "ui-icon-circle-close"}});
    $( "#checkboxEnabledSchedulerCOMPONENTID" ).change(function () {
                if (this.checked) {
                    $(this).button("option", "icons", {primary: "ui-icon-circle-check"})
                } else {
                    $(this).button("option", "icons", {primary: "ui-icon-circle-close"})
                }
            });
    $( "#checkboxEnabledSchedulerCOMPONENTID" ).filter(":checked").button({icons: {primary: "ui-icon-circle-check"} });
    $( "#SwitchOnSimpleSwitchCOMPONENTID" ).button().click(function() {
          $.ajax({
              url: "/",
              type: "get",
              'cache' : false,
              data: "ServiceName=SimpleSwitchDeviceManager&deviceId=COMPONENTID&action=ON&"+Math.floor((Math.random()*100)+1),
            success: function(data) {
                updateStatusCOMPONENTID();
            },
            error:function(xhr, ajaxOptions, thrownError){
                alert(thrownError);
            }   
          });
    });
    $( "#SwitchOffSimpleSwitchCOMPONENTID" ).button().click(function() {
          $.ajax({
              url: "/",
              type: "get",
              'cache' : false,
              data: "ServiceName=SimpleSwitchDeviceManager&deviceId=COMPONENTID&action=OFF&"+Math.floor((Math.random()*100)+1),
            success: function(data) {
                updateStatusCOMPONENTID();
            },
            error:function(xhr, ajaxOptions, thrownError){
                alert(thrownError);
            }   
          });
    });
    $( "#SwitchOffTimeoutSimpleSwitchCOMPONENTID" ).button().click(function() {
          var period = $( "#periodCOMPONENTID" ).val();
          $.ajax({
              url: "/",
              type: "get",
              'cache' : false,
              data: "ServiceName=SimpleSwitchDeviceManager&deviceId=COMPONENTID&action=ONTIMEOUT&period="+period+"&"+Math.floor((Math.random()*100)+1),
            success: function(data) {
                updateStatusCOMPONENTID();
            },
            error:function(xhr, ajaxOptions, thrownError){
                alert(thrownError);
            }   
          });
    });
    $( "#RefreshStatusCOMPONENTID" ).button().click(function() {
          updateStatusCOMPONENTID();
    });
    $( "#configureCOMPONENTID" ).button().click(function() {
          var nm = document.getElementById("nameFormCOMPONENTID").value;
          if (nm == '') {
                alert('Name of the component cannot be empty!');
                return;
          }
          var tm = parseInt(document.getElementById("offPeriodFormCOMPONENTID").value);
          if (tm == NaN) {
              alert('Switch off period should be number!');
              return;
          }
          if (tm > 255) {
              alert('Switch off period should be number between 0 and 255!');
              return;
          }
          var pw = document.getElementById("checkboxOnWhenPowerCOMPONENTID").checked?"TRUE":"FALSE";
          var schenabled = document.getElementById("checkboxEnabledSchedulerCOMPONENTID").checked?"TRUE":"FALSE";
          $.ajax({
              url: "/",
              type: "get",
              'cache' : false,
              data: "ServiceName=SimpleSwitchDeviceManager&deviceId=COMPONENTID&schenabled="+schenabled+"&pw="+pw+"&tm="+tm+"&nm="+encodeURIComponent(nm)+"&action=CONFIGURE&"+Math.floor((Math.random()*100)+1),
            success: function(data) {
            },
            error:function(xhr, ajaxOptions, thrownError){
                alert(thrownError);
            }   
          });
          updateStatusCOMPONENTID();
    });
    $( "#schDialogCOMPONENTID" ).dialog({      
            autoOpen: false,
            height: 390,
            width: 1024,
            modal: true,
            buttons: {
                "Assign schedule": function() {
                  var schData="&0="+saveSchedule("schTableCOMPONENTID", 0)+"&1="+saveSchedule("schTableCOMPONENTID", 1)+"&2="+saveSchedule("schTableCOMPONENTID", 2)+"&3="+saveSchedule("schTableCOMPONENTID", 3)+"&4="+saveSchedule("schTableCOMPONENTID", 4)+"&5="+saveSchedule("schTableCOMPONENTID", 5)+"&6="+saveSchedule("schTableCOMPONENTID", 6)+"&7="+saveSchedule("schTableCOMPONENTID", 7)+"&8="+saveSchedule("schTableCOMPONENTID", 8)+"&9="+saveSchedule("schTableCOMPONENTID", 9)+"&10="+saveSchedule("schTableCOMPONENTID", 10)+"&11="+saveSchedule("schTableCOMPONENTID", 11)+"&12="+saveSchedule("schTableCOMPONENTID", 12)+"&13="+saveSchedule("schTableCOMPONENTID", 13);
                  $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=SimpleSwitchDeviceManager&deviceId=COMPONENTID"+schData+"&action=SAVESCH&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        alert(thrownError);
                    }   
                  });
                  $( this ).dialog( "close" );
                },
                Cancel: function() {
                      $( this ).dialog( "close" );        
                }
          }
    });
    $( "#scheduleButtCOMPONENTID" ).button().click(function() {
          $( "#schDialog2COMPONENTID" ).replaceWith(createOnOffSchTable('schTableCOMPONENTID'));
          $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=SimpleSwitchDeviceManager&deviceId=COMPONENTID&action=LOADSCH&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                        loadSchedule(data, 'schTableCOMPONENTID');
                        $( "#schDialogCOMPONENTID" ).dialog( "open" );          
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        alert(thrownError);
                    }   
          });          
          $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=SchedulersManager&type=OnOff&action=LOAD&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                        loadPrograms(data, 'onoffProgsschTableCOMPONENTID');
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        alert(thrownError);
                    }   
          });
          $( "#onoffProgsSaveschTableCOMPONENTID" ).button({ icons: { primary: "ui-icon-disk" }, text: false }).click(function() {
                  var name = document.getElementById("onoffProgsNameschTableCOMPONENTID").value;
                  if (name == '') {
                        alert('The name of the program cannot be empty');
                        return;
                  }
                  var schData="&0="+saveSchedule("schTableCOMPONENTID", 0)+"&1="+saveSchedule("schTableCOMPONENTID", 1)+"&2="+saveSchedule("schTableCOMPONENTID", 2)+"&3="+saveSchedule("schTableCOMPONENTID", 3)+"&4="+saveSchedule("schTableCOMPONENTID", 4)+"&5="+saveSchedule("schTableCOMPONENTID", 5)+"&6="+saveSchedule("schTableCOMPONENTID", 6)+"&7="+saveSchedule("schTableCOMPONENTID", 7)+"&8="+saveSchedule("schTableCOMPONENTID", 8)+"&9="+saveSchedule("schTableCOMPONENTID", 9)+"&10="+saveSchedule("schTableCOMPONENTID", 10)+"&11="+saveSchedule("schTableCOMPONENTID", 11)+"&12="+saveSchedule("schTableCOMPONENTID", 12)+"&13="+saveSchedule("schTableCOMPONENTID", 13);
                  schData += "&name=" + name;
                  $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=SchedulersManager"+schData+"&action=SAVE&type=OnOff&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                        $('#onoffProgsschTableCOMPONENTID').append('<option value="'+name+'">'+name+'</option>');
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        alert(thrownError);
                    }   
                  });
          });
          $( "#onoffProgsUpdateschTableCOMPONENTID" ).button({ icons: { primary: "ui-icon-disk" }, text: false }).click(function() {
                  var name = $("#onoffProgsschTableCOMPONENTID option:selected").val();
                  var schData="&0="+saveSchedule("schTableCOMPONENTID", 0)+"&1="+saveSchedule("schTableCOMPONENTID", 1)+"&2="+saveSchedule("schTableCOMPONENTID", 2)+"&3="+saveSchedule("schTableCOMPONENTID", 3)+"&4="+saveSchedule("schTableCOMPONENTID", 4)+"&5="+saveSchedule("schTableCOMPONENTID", 5)+"&6="+saveSchedule("schTableCOMPONENTID", 6)+"&7="+saveSchedule("schTableCOMPONENTID", 7)+"&8="+saveSchedule("schTableCOMPONENTID", 8)+"&9="+saveSchedule("schTableCOMPONENTID", 9)+"&10="+saveSchedule("schTableCOMPONENTID", 10)+"&11="+saveSchedule("schTableCOMPONENTID", 11)+"&12="+saveSchedule("schTableCOMPONENTID", 12)+"&13="+saveSchedule("schTableCOMPONENTID", 13);
                  schData += "&name=" + name;
                  $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=SchedulersManager"+schData+"&action=UPDATE&type=OnOff&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        alert(thrownError);
                    }   
                  });
          });
          $( "#onoffProgsDeleteschTableCOMPONENTID" ).button({ icons: { primary: "ui-icon-closethick" }, text: false }).click(function() {
                var name = $("#onoffProgsschTableCOMPONENTID option:selected").val();
                  $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=SchedulersManager&name="+name+"&action=DELETE&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                        $("#onoffProgsschTableCOMPONENTID option:selected").remove();
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        alert(thrownError);
                    }   
                  });
          });
          $( "#onoffProgsLoadschTableCOMPONENTID" ).button({ icons: { primary: "ui-icon-arrowthick-1-n" }, text: false }).click(function() {
                var name = $("#onoffProgsschTableCOMPONENTID option:selected").val();
                  $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=SchedulersManager&name="+name+"&action=GET&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                        loadSchedule(data, 'schTableCOMPONENTID');                        
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        alert(thrownError);
                    }   
                  });
          });
    });
    updateStatusCOMPONENTID();
    window.setInterval(function() {
        updateStatusCOMPONENTID(false);
    }, 300000);
});
</script>
<table width="100%"><tr>
<td>
    <table width="100%"><tr><td width="50%">
    <input width="100%" type="submit" id="SwitchOnSimpleSwitchCOMPONENTID" value="Switch On" />
    </td><td width="50%">
    <input width="100%" type="submit" id="SwitchOffSimpleSwitchCOMPONENTID" value="Switch Off" />
    </td></tr>
    <tr>
        <td colspan="2">&nbsp;</td>
    </tr>
    <tr>
        <td colspan="2">&nbsp;</td>
    </tr>
    <tr>
        <td  width="50%">
            <select  width="100%" id="periodCOMPONENTID">
                <option value="0">&nbsp;</option>
                <option value="5">5 min</option>
                <option value="15">15 min</option>
                <option value="30">30 min</option>
                <option value="60">1 hour</option>
                <option value="120">2 hours</option>
                <option value="240">4 hours</option>
            </select></td><td  width="50%">
            &nbsp;&nbsp;
            <input width="100%" type="submit" id="SwitchOffTimeoutSimpleSwitchCOMPONENTID" value="Switch On with period" />
        </td>
    </tr>
    <tr>
        <td colspan="2">&nbsp;</td>
    </tr>
    <tr>
        <td colspan="2">&nbsp;</td>
    </tr>
    <tr><td  width="100%" colspan="2"><button id="scheduleButtCOMPONENTID">Scheduler</button></td></tr>
    </table>
</td>
<td>
<table class="ui-widget" style="border-collapse: collapse;" width="100%">
              <thead class="ui-widget-header">
                <tr>
                <th>Property</th>
                <th>Value</th>
                <th>Parameter</th>
                <th>Value</th>
                </tr>
                </thead>
                <tbody class="ui-widget-content">
                <tr>
                <td>Name</td>
                <td><span id='nameCOMPONENTID'></span></td>
                <td colspan="2">&nbsp;</td>
                </tr>
                <tr>
                <td>Status</td>
                <td><span id='statusCOMPONENTID'></span></td>
                <td>Name:</td>
                <td><input type="text" id="nameFormCOMPONENTID" /></td>
                </tr>
                <tr>
                <td>Component id</td>
                <td><span id='compIdCOMPONENTID'></span></td>
                <td>Switch off period:</td>
                <td><input type="text" id="offPeriodFormCOMPONENTID" /></td>
                </tr>
                <tr>
                <td>On when applied power</td>
                <td><span id='onWhenPowerCOMPONENTID'></span></td>
                <td>On when applied power:</td>
                <td><input type="checkbox" id="checkboxOnWhenPowerCOMPONENTID" /><label for="checkboxOnWhenPowerCOMPONENTID">&nbsp;</label></td>
                </tr>
                <tr>
                <td>Switch off period</td>
                <td><span id='configuredPeriodCOMPONENTID'></span></td>
                <td>Enabled scheduler:</td>
                <td><input type="checkbox" id="checkboxEnabledSchedulerCOMPONENTID" /><label for="checkboxEnabledSchedulerCOMPONENTID">&nbsp;</label></td>
                </tr>
                <tr>
                <td>Current period</td>
                <td><span id='currentPeriodCOMPONENTID'></span></td>
                <td colspan="2">&nbsp;</td>
                </tr>
                <tr>
                <td>Scheduler enabled</td>
                <td><span id='enabledSchedulerCOMPONENTID'></span></td>
                <td colspan="2">&nbsp;</td>
                </tr>
                <tr>
                <td>Last update timestamp</td>
                <td><span id='timestampCOMPONENTID'></span></td>
                <td colspan="2">&nbsp;</td>
                </tr>
                <tr>
                <td colspan ="2"><input type="submit" id="RefreshStatusCOMPONENTID" value="Refresh" /></td>
                <td colspan ="2"><input type="submit" id="configureCOMPONENTID" value="Change configuration" /></td>
                </tr>
                </tbody>
</table>
</td>
</tr></table>
<div id="schDialogCOMPONENTID" title="Switch Scheduler">
    <div id="schDialog2COMPONENTID">
    </div>
</div>
</div>