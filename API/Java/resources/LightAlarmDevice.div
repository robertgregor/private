<div>
<script>
function updateStatusCOMPONENTID() {
  $.ajax({
      url: "/",
      type: "get",
      'cache' : false,
      data: "ServiceName=GetJsonObject&deviceId=COMPONENTID&"+Math.floor((Math.random()*100)+1),
      success: function(indata) {
          var data = JSON.parse(indata);
          document.getElementById("nameCOMPONENTID").innerHTML=data.deviceName;
          document.getElementById("nameFormCOMPONENTID").value = data.deviceName;
          if (data.currentState) {
              document.getElementById("statusCOMPONENTID").innerHTML='ON';
          } else {
              document.getElementById("statusCOMPONENTID").innerHTML='OFF';
          }
          document.getElementById("compIdCOMPONENTID").innerHTML=data.deviceId;
          if (data.onWhenAppliedPower) {
                $( "#checkboxOnWhenPowerCOMPONENTID" ).prop('checked', true);
                document.getElementById("onWhenPowerCOMPONENTID").innerHTML='YES';
          } else {
                $( "#checkboxOnWhenPowerCOMPONENTID" ).prop('checked', false);
                document.getElementById("onWhenPowerCOMPONENTID").innerHTML='NO';
          }
          $("#checkboxOnWhenPowerCOMPONENTID").trigger("change");
          document.getElementById("configuredPeriodCOMPONENTID").innerHTML=data.configuredPeriod;
          document.getElementById("offPeriodFormCOMPONENTID").value = data.configuredPeriod;
          document.getElementById("currentPeriodCOMPONENTID").innerHTML=data.currentCounter;
          document.getElementById("enterTimeoutCOMPONENTID").innerHTML=data.alarmEnterTimeout;
          document.getElementById("enterPeriodFormCOMPONENTID").value = data.alarmEnterTimeout;
          document.getElementById("leaveTimeoutCOMPONENTID").innerHTML=data.alarmLeaveTimeout;
          document.getElementById("leavePeriodFormCOMPONENTID").value = data.alarmLeaveTimeout;
          if (data.onWhenMovementDetected) {
                $( "#checkboxOnWhenMovementCOMPONENTID" ).prop('checked', true);
                document.getElementById("onWhenMovementCOMPONENTID").innerHTML='YES';
          } else {
                $( "#checkboxOnWhenMovementCOMPONENTID" ).prop('checked', false);
                document.getElementById("onWhenMovementCOMPONENTID").innerHTML='NO';
          }
          $("#checkboxOnWhenMovementCOMPONENTID").trigger("change");
          document.getElementById("timestampCOMPONENTID").innerHTML=new Date(data.timestamp).europeDate();
          document.getElementById("smtpHostFormCOMPONENTID").value = data.smtpHost;
          document.getElementById("smtpUserFormCOMPONENTID").value = data.smtpUser;
          document.getElementById("smtpPasswordFormCOMPONENTID").value = data.smtpPassword;
          document.getElementById("smtpEmailFromFormCOMPONENTID").value = data.smtpEmailFrom;
          document.getElementById("smtpEmailToFormCOMPONENTID").value = data.smtpEmailTo;
          document.getElementById("smtpSubjectFormCOMPONENTID").value = data.smtpSubject;
          document.getElementById("smtpMessageFormCOMPONENTID").value = data.smtpMessage;
          if (data.alarmStatus == 0)
            document.getElementById("statusAlCOMPONENTID").innerHTML = 'Disabled';
          else if (data.alarmStatus == 1)
            document.getElementById("statusAlCOMPONENTID").innerHTML = 'Enabled';
          else if (data.alarmStatus == 2)
            document.getElementById("statusAlCOMPONENTID").innerHTML = 'activated';
          else if (data.alarmStatus == 3)
            document.getElementById("statusAlCOMPONENTID").innerHTML = 'Leave timeout running';
          else if (data.alarmStatus == 4)
            document.getElementById("statusAlCOMPONENTID").innerHTML = 'Enter timeout running';
          else
            document.getElementById("statusAlCOMPONENTID").innerHTML = 'Unknown';
          if (data.alarmSensorCurrentState == 0)
            document.getElementById("statusSenCOMPONENTID").innerHTML = 'Nothing detected';
          else if (data.alarmSensorCurrentState == 1)
            document.getElementById("statusSenCOMPONENTID").innerHTML = 'Movement detected';
          else
            document.getElementById("statusSenCOMPONENTID").innerHTML = 'Unknown';
      },
      error:function(){
          alert('Error when tried to get the status of the device.');
      }   
  });
}
$(function() {
    $( "#checkboxOnWhenPowerCOMPONENTID" ).button({icons: {primary: "ui-icon-circle-close"}});
    $( "#checkboxOnWhenPowerCOMPONENTID" ).change(function () {
                if (this.checked) {
                    $(this).button("option", "icons", {primary: "ui-icon-circle-check"})
                } else {
                    $(this).button("option", "icons", {primary: "ui-icon-circle-close"})
                }
            });
    $( "#checkboxOnWhenPowerCOMPONENTID" ).filter(":checked").button({icons: {primary: "ui-icon-circle-check"} });

    $( "#checkboxOnWhenMovementCOMPONENTID" ).button({icons: {primary: "ui-icon-circle-close"}});
    $( "#checkboxOnWhenMovementCOMPONENTID" ).change(function () {
                if (this.checked) {
                    $(this).button("option", "icons", {primary: "ui-icon-circle-check"})
                } else {
                    $(this).button("option", "icons", {primary: "ui-icon-circle-close"})
                }
            });
    $( "#checkboxOnWhenMovementCOMPONENTID" ).filter(":checked").button({icons: {primary: "ui-icon-circle-check"} });

    $( "#SwitchOnSimpleSwitchCOMPONENTID" ).button().click(function() {
          $.ajax({
              url: "/",
              type: "get",
              'cache' : false,
              data: "ServiceName=LightAlarmDeviceManager&deviceId=COMPONENTID&action=ON&"+Math.floor((Math.random()*100)+1),
            success: function(data) {
                updateStatusCOMPONENTID();
            },
            error:function(xhr, ajaxOptions, thrownError){
                alert(thrownError);
            }   
          });
    });
    $( "#SwitchOffSimpleSwitchCOMPONENTID" ).button().click(function() {
          $.ajax({
              url: "/",
              type: "get",
              'cache' : false,
              data: "ServiceName=LightAlarmDeviceManager&deviceId=COMPONENTID&action=OFF&"+Math.floor((Math.random()*100)+1),
            success: function(data) {
                updateStatusCOMPONENTID();
            },
            error:function(xhr, ajaxOptions, thrownError){
                alert(thrownError);
            }   
          });
    });
    $( "#SwitchOffTimeoutSimpleSwitchCOMPONENTID" ).button().click(function() {
          var period = $( "#periodCOMPONENTID" ).val();
          $.ajax({
              url: "/",
              type: "get",
              'cache' : false,
              data: "ServiceName=LightAlarmDeviceManager&deviceId=COMPONENTID&action=ONTIMEOUT&period="+period+"&"+Math.floor((Math.random()*100)+1),
            success: function(data) {
                updateStatusCOMPONENTID();
            },
            error:function(xhr, ajaxOptions, thrownError){
                alert(thrownError);
            }   
          });
    });
    $( "#RefreshStatusCOMPONENTID" ).button().click(function() {
          updateStatusCOMPONENTID();
    });
    $( "#RefreshStatusAlCOMPONENTID" ).button().click(function() {
          updateStatusCOMPONENTID();
    });
    $( "#configureCOMPONENTID" ).button().click(function() {
          var nm = document.getElementById("nameFormCOMPONENTID").value;
          if (nm == '') {
                alert('Name of the component cannot be empty!');
                return;
          }
          var tm = parseInt(document.getElementById("offPeriodFormCOMPONENTID").value);
          if (tm == NaN) {
              alert('Switch off period should be number!');
              return;
          }
          if (tm > 255) {
              alert('Switch off period should be number between 0 and 255!');
              return;
          }
          var pw = document.getElementById("checkboxOnWhenPowerCOMPONENTID").checked?"TRUE":"FALSE";
          var et = parseInt(document.getElementById("enterPeriodFormCOMPONENTID").value);
          if (et == NaN) {
              alert('Alarm enter timeout period should be number!');
              return;
          }
          if (et > 255) {
              alert('Alarm enter timeout should be number between 0 and 255!');
              return;
          }
          var lt = parseInt(document.getElementById("leavePeriodFormCOMPONENTID").value);
          if (lt == NaN) {
              alert('Alarm leave timeout period should be number!');
              return;
          }
          if (lt > 255) {
              alert('Alarm leave timeout period should be number between 0 and 255!');
              return;
          }
          var apw = document.getElementById("checkboxOnWhenMovementCOMPONENTID").checked?"TRUE":"FALSE";
          var smtpHost = encodeURIComponent(document.getElementById("smtpHostFormCOMPONENTID").value);
          var smtpUser = encodeURIComponent(document.getElementById("smtpUserFormCOMPONENTID").value);
          var smtpPassword = encodeURIComponent(document.getElementById("smtpPasswordFormCOMPONENTID").value);
          var smtpFrom = encodeURIComponent(document.getElementById("smtpEmailFromFormCOMPONENTID").value);
          var smtpTo = encodeURIComponent(document.getElementById("smtpEmailToFormCOMPONENTID").value);
          var smtpSubject = encodeURIComponent(document.getElementById("smtpSubjectFormCOMPONENTID").value);
          var smtpMessage = encodeURIComponent(document.getElementById("smtpMessageFormCOMPONENTID").value);
          $.ajax({
              url: "/",
              type: "get",
              'cache' : false,
              data: "ServiceName=LightAlarmDeviceManager&deviceId=COMPONENTID&pw="+pw+"&tm="+tm+"&nm="+encodeURIComponent(nm)+"&action=CONFIGURE&et="+et+"&lt="+lt+"&apw="+apw+"&smtpHost="+smtpHost+"&smtpUser="+smtpUser+"&smtpPassword="+smtpPassword+"&smtpFrom="+smtpFrom+"&smtpTo="+smtpTo+"&smtpSubject="+smtpSubject+"&smtpMessage="+smtpMessage+"&"+Math.floor((Math.random()*100)+1),
            success: function(data) {
                updateStatusCOMPONENTID();
            },
            error:function(xhr, ajaxOptions, thrownError){
                alert(thrownError);
            }   
          });
          updateStatusCOMPONENTID();
    });
    $( "#activateAlarmCOMPONENTID" ).button().click(function() {
          $.ajax({
              url: "/",
              type: "get",
              'cache' : false,
              data: "ServiceName=LightAlarmDeviceManager&deviceId=COMPONENTID&action=ALON&"+Math.floor((Math.random()*100)+1),
            success: function(data) {
                updateStatusCOMPONENTID();
            },
            error:function(xhr, ajaxOptions, thrownError){
                alert(thrownError);
            }   
          });
    });
    $( "#deactivateAlarmCOMPONENTID" ).button().click(function() {
          $.ajax({
              url: "/",
              type: "get",
              'cache' : false,
              data: "ServiceName=LightAlarmDeviceManager&deviceId=COMPONENTID&action=ALOFF&"+Math.floor((Math.random()*100)+1),
            success: function(data) {
                updateStatusCOMPONENTID();
            },
            error:function(xhr, ajaxOptions, thrownError){
                alert(thrownError);
            }   
          });
    });
    $( "#activateAllAlarmCOMPONENTID" ).button().click(function() {
          $.ajax({
              url: "/",
              type: "get",
              'cache' : false,
              data: "ServiceName=LightAlarmDeviceManager&deviceId=COMPONENTID&action=ALALLON&"+Math.floor((Math.random()*100)+1),
            success: function(data) {
                updateStatusCOMPONENTID();
            },
            error:function(xhr, ajaxOptions, thrownError){
                alert(thrownError);
            }   
          });
    });
    $( "#deactivateAllAlarmCOMPONENTID" ).button().click(function() {
          $.ajax({
              url: "/",
              type: "get",
              'cache' : false,
              data: "ServiceName=LightAlarmDeviceManager&deviceId=COMPONENTID&action=ALALLOFF&"+Math.floor((Math.random()*100)+1),
            success: function(data) {
                updateStatusCOMPONENTID();
            },
            error:function(xhr, ajaxOptions, thrownError){
                alert(thrownError);
            }   
          });
    });
    $( "#schDialogLaCOMPONENTID" ).dialog({      
            autoOpen: false,
            height: 385,
            width: 830,
            modal: true,
            buttons: {
                "Save schedule": function() {
                  var schData="&0="+saveSchedule("schTableLaCOMPONENTID", 0)+"&1="+saveSchedule("schTableLaCOMPONENTID", 1)+"&2="+saveSchedule("schTableLaCOMPONENTID", 2)+"&3="+saveSchedule("schTableLaCOMPONENTID", 3)+"&4="+saveSchedule("schTableLaCOMPONENTID", 4)+"&5="+saveSchedule("schTableLaCOMPONENTID", 5)+"&6="+saveSchedule("schTableLaCOMPONENTID", 6)+"&7="+saveSchedule("schTableLaCOMPONENTID", 7)+"&8="+saveSchedule("schTableLaCOMPONENTID", 8)+"&9="+saveSchedule("schTableLaCOMPONENTID", 9)+"&10="+saveSchedule("schTableLaCOMPONENTID", 10)+"&11="+saveSchedule("schTableLaCOMPONENTID", 11)+"&12="+saveSchedule("schTableLaCOMPONENTID", 12)+"&13="+saveSchedule("schTableLaCOMPONENTID", 13);
                  $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=LightAlarmDeviceManager&deviceId=COMPONENTID"+schData+"&action=SAVESCH&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        alert(thrownError);
                    }   
                  });
                  $( this ).dialog( "close" );
                },
                Cancel: function() {
                      $( this ).dialog( "close" );        
                }
          }
    });
    $( "#scheduleButtLightAlmCOMPONENTID" ).button().click(function() {
          $( "#schDialogLa2COMPONENTID" ).replaceWith(createSchTable('schTableLaCOMPONENTID'));
          mouseDown==0;
          $( 'table.schtable' ).delegate('td', 'mouseover', function () {
            if (mouseDown == 1) $(this).toggleClass('schtds');
          });
          $( 'table.schtable' ).delegate('td', 'mousedown', function () {
            $(this).toggleClass('schtds');
          });
          $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=LightAlarmDeviceManager&deviceId=COMPONENTID&action=LOADSCH&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                        loadSchedule(data, 'schTableLaCOMPONENTID');
                        $( "#schDialogLaCOMPONENTID" ).dialog( "open" );          
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        alert(thrownError);
                    }   
          });          
    });
    $( "#schDialogMovementCOMPONENTID" ).dialog({      
            autoOpen: false,
            height: 385,
            width: 830,
            modal: true,
            buttons: {
                "Save schedule": function() {
                  var schData="&0="+saveSchedule("schTableMovementCOMPONENTID", 0)+"&1="+saveSchedule("schTableMovementCOMPONENTID", 1)+"&2="+saveSchedule("schTableMovementCOMPONENTID", 2)+"&3="+saveSchedule("schTableMovementCOMPONENTID", 3)+"&4="+saveSchedule("schTableMovementCOMPONENTID", 4)+"&5="+saveSchedule("schTableMovementCOMPONENTID", 5)+"&6="+saveSchedule("schTableMovementCOMPONENTID", 6)+"&7="+saveSchedule("schTableMovementCOMPONENTID", 7)+"&8="+saveSchedule("schTableMovementCOMPONENTID", 8)+"&9="+saveSchedule("schTableMovementCOMPONENTID", 9)+"&10="+saveSchedule("schTableMovementCOMPONENTID", 10)+"&11="+saveSchedule("schTableMovementCOMPONENTID", 11)+"&12="+saveSchedule("schTableMovementCOMPONENTID", 12)+"&13="+saveSchedule("schTableMovementCOMPONENTID", 13);
                  $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=LightAlarmDeviceManager&deviceId=COMPONENTID"+schData+"&action=SAVESCHMOVEMENT&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        alert(thrownError);
                    }   
                  });
                  $( this ).dialog( "close" );
                },
                Cancel: function() {
                      $( this ).dialog( "close" );        
                }
          }
    });
    $( "#scheduleLightOnMovementCOMPONENTID" ).button().click(function() {
          $( "#schDialogMovement2COMPONENTID" ).replaceWith(createSchTable('schTableMovementCOMPONENTID'));
          mouseDown==0;
          $( 'table.schtable' ).delegate('td', 'mouseover', function () {
            if (mouseDown == 1) $(this).toggleClass('schtds');
          });
          $( 'table.schtable' ).delegate('td', 'mousedown', function () {
            $(this).toggleClass('schtds');
          });
          $.ajax({
                        url: "/",
                        type: "get",
                        'cache' : false,
                        data: "ServiceName=LightAlarmDeviceManager&deviceId=COMPONENTID&action=LOADSCHMOVEMENT&"+Math.floor((Math.random()*100)+1),
                    success: function(data) {
                        loadSchedule(data, 'schTableMovementCOMPONENTID');
                        $( "#schDialogMovementCOMPONENTID" ).dialog( "open" );          
                    },
                    error:function(xhr, ajaxOptions, thrownError){
                        alert(thrownError);
                    }   
          });          
    });
    updateStatusCOMPONENTID();
    window.setInterval(function() {
        updateStatusCOMPONENTID(false);
    }, 300000);
});
</script>
<table width="100%"><tr>
<td>
    <table width="100%"><tr><td>
    <input type="submit" id="SwitchOnSimpleSwitchCOMPONENTID" value="Switch On" />
    </td><td>
    <input type="submit" id="SwitchOffSimpleSwitchCOMPONENTID" value="Switch Off" />
    </td></tr>
    <tr>
        <td colspan="2">&nbsp;</td>
    </tr>
    <tr>
        <td colspan="2">
            <select id="periodCOMPONENTID">
                <option value="0">&nbsp;</option>
                <option value="5">5 min</option>
                <option value="15">15 min</option>
                <option value="30">30 min</option>
                <option value="60">1 hour</option>
                <option value="120">2 hours</option>
                <option value="240">4 hours</option>
            </select>
            &nbsp;&nbsp;
            <input type="submit" id="SwitchOffTimeoutSimpleSwitchCOMPONENTID" value="Switch On with period" />
        </td>
    </tr>
    <tr>
        <td colspan="2">&nbsp;</td>
    </tr>
    <tr>
    <td>
    <button id="scheduleButtLightAlmCOMPONENTID">Light scheduler</button>
    </td>
    <td>
    <button id="scheduleLightOnMovementCOMPONENTID">Movement sensor scheduler</button>
    </td>
    </tr>
    <tr>
        <td colspan="2">&nbsp;</td>
    </tr>
    <tr><td>
    <input type="submit" id="activateAlarmCOMPONENTID" value="Activate alarm" />
    </td><td>
    <input type="submit" id="deactivateAlarmCOMPONENTID" value="Deactivate alarm" />
    </td></tr>
    <tr>
        <td colspan="2">&nbsp;</td>
    </tr>
        <td><input type="submit" id="activateAllAlarmCOMPONENTID" value="Activate all alarms" /></td>
        <td><input type="submit" id="deactivateAllAlarmCOMPONENTID" value="Deactivate all alarms" /></td>
    <tr>
    </tr>
    </table>
</td>
<td>
    <table class="ui-widget" style="border-collapse: collapse;" width="100%">
              <thead class="ui-widget-header">
                <tr>
                <th>Property</th>
                <th>Value</th>
                <th>Parameter</th>
                <th>Value</th>
                </tr>
                </thead>
                <tbody class="ui-widget-content">
                <tr>
                <td>Name</td>
                <td><span id='nameCOMPONENTID'></span></td>
                <td>Name:</td>
                <td><input type="text" id="nameFormCOMPONENTID" /></td>
                </tr>
                <tr>
                <td>Switch status</td>
                <td><span id='statusCOMPONENTID'></span></td>
                <td>Switch off period:</td>
                <td><input type="text" id="offPeriodFormCOMPONENTID" /></td>
                </tr>
                <tr>
                <td>Component id</td>
                <td><span id='compIdCOMPONENTID'></span></td>
                <td>On when applied power:</td>
                <td><input type="checkbox" id="checkboxOnWhenPowerCOMPONENTID" /><label for="checkboxOnWhenPowerCOMPONENTID">&nbsp;</label></td>
                </tr>
                <tr>
                <td>On when applied power</td>
                <td><span id='onWhenPowerCOMPONENTID'></span></td>
                <td>Alarm enter timeout:</td>
                <td><input type="text" id="enterPeriodFormCOMPONENTID"/></td>
                </tr>
                <tr>
                <td>Switch off period</td>
                <td><span id='configuredPeriodCOMPONENTID'></span></td>
                <td>Alarm leave timeout:</td>
                <td><input type="text" id="leavePeriodFormCOMPONENTID" /></td>
                </tr>
                <tr>
                <td>Current period</td>
                <td><span id='currentPeriodCOMPONENTID'></span></td>
                <td>Light on when movement detected:</td>
                <td><input type="checkbox" id="checkboxOnWhenMovementCOMPONENTID" /><label for="checkboxOnWhenMovementCOMPONENTID">&nbsp;</label></td>                
                </tr>
                <tr>
                <td>Enter alarm timeout</td>
                <td><span id='enterTimeoutCOMPONENTID'></span></td>
                <td>SMTP server host:</td>
                <td><input type="text" id="smtpHostFormCOMPONENTID" /></td>
                </tr>
                <tr>
                <td>Leave alarm timeout</td>
                <td><span id='leaveTimeoutCOMPONENTID'></span></td>
                <td>SMTP login user:</td>
                <td><input type="text" id="smtpUserFormCOMPONENTID" /></td>
                </tr>
                <tr>
                <td>On when movement detected</td>
                <td><span id='onWhenMovementCOMPONENTID'></span></td>
                <td>SMTP login password:</td>
                <td><input type="text" id="smtpPasswordFormCOMPONENTID" /></td>
                </tr>
                <td>Realtime movement sensor state</td>
                <td><span id='statusSenCOMPONENTID'></span></td>
                <td>SMTP email address from:</td>
                <td><input type="text" id="smtpEmailFromFormCOMPONENTID" /></td>
                </tr>
                <tr>
                <td>Alarm status</td>
                <td><span id='statusAlCOMPONENTID'></span></td>
                <td>SMTP email address to:</td>
                <td><input type="text" id="smtpEmailToFormCOMPONENTID" /></td>
                </tr>
                <tr>
                <td colspan="2">&nbsp;</td>
                <td>SMTP subject:</td>
                <td><input type="text" id="smtpSubjectFormCOMPONENTID" /></td>
                </tr>
                <tr>
                <td colspan="2">&nbsp;</td>
                <td>SMTP message:</td>
                <td><input type="text" id="smtpMessageFormCOMPONENTID" /></td>
                </tr>
                <tr>
                <td>Last update timestamp</td>
                <td><span id='timestampCOMPONENTID'></span></td>
                <td colspan="2">&nbsp;</td>
                </tr>
                <tr>
                <td colspan ="2"><input type="submit" id="RefreshStatusCOMPONENTID" value="Refresh" /></td>
                <td colspan ="2"><input type="submit" id="configureCOMPONENTID" value="Change configuration" /></td>
                </tr>
                </tbody>
    </table>
</td>
</tr></table>
<div id="schDialogLaCOMPONENTID" title="Light Scheduler">
    <div id="schDialogLa2COMPONENTID">
    </div>
</div>
<div id="schDialogMovementCOMPONENTID" title="Switch Scheduler">
    <div id="schDialogMovement2COMPONENTID">
    </div>
</div>
</div>